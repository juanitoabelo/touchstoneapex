{"version":3,"sources":["webpack:///./src/pages/company/add-company.js"],"names":["Input","styled","InputGroup","SelectStyled","Select","selectMemberTypeOptions","value","label","isBrowser","window","MyCompany","state","CompanyName","CompanyType","CompanyMemberType","CompanyTypeData","saveState","data","setState","onAddCompany","axios","method","url","params","tblName","queryType","then","response","console","log","catch","error","onChangeStatus","e","target","onChangeMemberTypeOptions","onChangeCompanyTypeOption","componentWillUnmount","this","componentDidMount","isLoggedIn","location","href","get","JSON","stringify","render","title","className","breakPoint","xs","htmlFor","options","map","CompanyTypeID","CompanyTypeDesc","placeholder","CompanyTypeDescription","id","name","CompanyId","onChange","bind","fullWidth","size","type","md","status","shape","onClick","Component"],"mappings":"yUAeMA,EAAQC,YAAOC,KAAV,wEAAGD,CAAH,yBAILE,EAAeF,YAAOG,KAAV,+EAAGH,CAAH,yBAIZI,EAA0B,CAC9B,CAAEC,MAAO,kBAAmBC,MAAO,mBACnC,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,QAASC,MAAO,UAGrBC,EAA8B,oBAAXC,OAEJC,E,oJAEnBC,MAAQ,CACNC,YAAa,GACbC,YAAa,EACbC,kBAAmB,GACnBC,gBAAiB,I,EA0CnBC,UAAY,SAACC,GACX,EAAKC,SAASD,I,EAGhBE,aAAe,WACXC,IAAM,CACJC,OAAQ,MACRC,IAAK,oEACLC,OAAQ,CACNC,QAAS,aACTC,UAAW,oBACXb,YAAa,EAAKD,MAAMC,YACxBE,kBAAmB,EAAKH,MAAMG,kBAC9BD,YAAa,EAAKF,MAAME,eAG3Ba,MAAK,SAAUC,GACdC,QAAQC,IAAIF,EAAZ,oCAEDG,OAAM,SAAUC,GACfH,QAAQC,IAAIE,EAAZ,a,EAKNC,eAAiB,SAACC,GAChB,EAAKjB,UAAU,CACbJ,YAAaqB,EAAEC,OAAO5B,S,EAI1B6B,0BAA4B,SAACF,GAE3B,EAAKjB,UAAU,CACbF,kBAAmBmB,EAAE3B,S,EAIzB8B,0BAA4B,SAACH,GAE3B,EAAKjB,UAAU,CACbH,YAAaoB,EAAE3B,S,8CAhFnB+B,qBAAA,WACEC,KAAKpB,SAAS,CACZN,YAAa,GACbC,YAAa,EACbC,kBAAmB,GACnBC,gBAAiB,M,EAIrBwB,kBAAA,YACOC,eAAgBhC,IACnBC,OAAOgC,SAASC,KAAK,KAEvB,IAAQ1B,EAAqBsB,KAArBtB,UAAqBsB,KAAV3B,MAGlBS,IAAMuB,IAAI,oEAAqE,CAC9EpB,OAAQ,CACNC,QAAS,iBACTC,UAAW,uBAGdC,MAAK,SAAUC,GACbC,QAAQC,IAAI,sBAAuBe,KAAKC,UAAUlB,EAASV,OAC5DD,EAAU,CACRD,gBAAiBY,EAASV,UAI7Ba,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAEbL,MAAK,SAAUC,GAEdC,QAAQC,IAAIF,EAAZ,mB,EAkDJmB,OAAA,WAAU,IAAD,IAECnC,EAA8F2B,KAA9F3B,MAAOwB,EAAuFG,KAAvFH,0BAA2BC,EAA4DE,KAA5DF,0BAA2BJ,EAAiCM,KAAjCN,eAAgBb,EAAiBmB,KAAjBnB,aAErF,OACE,oCACE,kBAAC,IAAD,CAAK4B,MAAM,gBACX,yBAAKC,UAAU,6BAEf,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,WAAY,CAAEC,GAAI,KACrB,wBAAIF,UAAU,oBAAd,iBAIJ,kBAAC,IAAD,CAAKA,UAAU,kDACb,kBAAC,IAAD,CAAKA,UAAU,aACf,8BACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,WAAY,CAAEC,GAAI,KACrB,2BAAOC,QAAQ,eAAf,gBACA,kBAAChD,EAAD,CAAciD,QAASzC,EAAMI,gBAAgBsC,KAAI,YAC3C,MAAO,CAAE/C,MAD0E,EAArCgD,cACf/C,MADoD,EAAtBgD,oBAE1DC,YAAa7C,EAAM8C,uBAAwBC,GAAG,cAAcC,KAAK,cAAcrD,MAAOK,EAAMiD,UAAWC,SAAWzB,EAA0B0B,KAAKxB,SAG5J,kBAAC,IAAD,CAAKW,WAAY,CAAEC,GAAI,KACrB,2BAAOC,QAAQ,cAAf,eACA,kBAAChD,EAAD,CAAciD,QAAS/C,EAA0BmD,YAAY,SAASE,GAAG,aAAaC,KAAK,aAAaE,SAAW1B,EAA0B2B,KAAKxB,SAGpJ,kBAAC,IAAD,CAAKW,WAAY,CAAEC,GAAI,KACnB,2BAAOC,QAAQ,eAAf,gBACA,kBAACnD,EAAD,CAAO+D,WAAS,EAACC,KAAK,SAAShB,UAAU,QACzC,2BAAOiB,KAAK,OAAOT,YAAY,GAAGE,GAAG,cAAcC,KAAK,cAAcE,SAAW7B,EAAe8B,KAAKxB,UAIzG,kBAAC,MAAD,GAAKW,WAAY,CAAEC,GAAI,MAAvB,WAAyC,CAAEgB,GAAI,GAA/C,IACA,kBAAC,MAAD,GAAKjB,WAAY,CAAEC,GAAI,MAAvB,WAAyC,CAAEgB,GAAI,GAA/C,GACI,kBAAC,IAAD,CAAQC,OAAO,UAAUF,KAAK,SAASG,MAAM,YAAYC,QAASlD,EAAc4C,WAAS,GAAzF,mB,GAzISO","file":"component---src-pages-company-add-company-js-487170f1f775877071d4.js","sourcesContent":["import Select from '@paljs/ui/Select';\nimport { InputGroup } from '@paljs/ui/Input';\nimport { Card, CardBody } from '@paljs/ui/Card';\nimport { ButtonLink } from '@paljs/ui/Button';\nimport { Button } from '@paljs/ui/Button';\nimport { navigate } from 'gatsby';\nimport Col from '@paljs/ui/Col';\nimport Row from '@paljs/ui/Row';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport SEO from '../../components/SEO';\nimport axios from 'axios';\nimport { Container } from '@material-ui/core';\nimport { isLoggedIn } from \"../../components/services/auth\"\n\nconst Input = styled(InputGroup)`\n  margin-bottom: 10px;\n`;\n\nconst SelectStyled = styled(Select)`\n  margin-bottom: 1rem;\n`;\n\nconst selectMemberTypeOptions = [\n  { value: 'Mutual Referent', label: 'Mutual Referent' },\n  { value: 'Referent', label: 'Referent' },\n  { value: 'Resource', label: 'Resource' },\n  { value: 'Contributor', label: 'Contributor' },\n  { value: 'Influencer', label: 'Influencer' },\n  { value: 'Friendly', label: 'Friendly' },\n  { value: 'Advocate', label: 'Advocate' },\n  { value: 'Other', label: 'Other' },\n];\n\nconst isBrowser = typeof window !== \"undefined\"\n\nexport default class MyCompany extends Component {\n\n  state = {\n    CompanyName: '',\n    CompanyType: 0,\n    CompanyMemberType: '',\n    CompanyTypeData: []\n  }\n\n  componentWillUnmount(){\n    this.setState({\n      CompanyName: '',\n      CompanyType: 0,\n      CompanyMemberType: '',\n      CompanyTypeData: []\n    })  \n  }\n\n  componentDidMount() {\n    if (!isLoggedIn() && isBrowser ) {\n      window.location.href=\"/\"\n    }\n    const { saveState, state } = this;\n\n     /** Get All Company Type Details **/\n     axios.get('https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php', {\n      params: {\n        tblName: 'tblCompanyType',\n        queryType: 'getAllCompanyType'\n      }\n    })\n    .then(function (response) {\n       console.log('Company Type Data: '+ JSON.stringify(response.data));\n      saveState({\n        CompanyTypeData: response.data\n      });\n       \n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n    .then(function (response) {\n      // always executed\n      console.log(response,`successfull`);\n    });\n\n  }\n\n  saveState = (data) => {\n    this.setState(data);\n  }\n\n  onAddCompany = () => {\n      axios({\n        method: 'get',\n        url: 'https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php',\n        params: {\n          tblName: 'tblCompany',\n          queryType: 'addNewCompanyInfo',\n          CompanyName: this.state.CompanyName,\n          CompanyMemberType: this.state.CompanyMemberType,\n          CompanyType: this.state.CompanyType\n        }\n      })\n      .then(function (response) {\n        console.log(response,`Added New Company successfull`);\n      })\n      .catch(function (error) {\n        console.log(error,`error`);\n      });\n  }\n  \n  // Save Company Name Field value to a state after user input\n  onChangeStatus = (e) => {\n    this.saveState({\n      CompanyName: e.target.value\n    });\n  }\n\n  onChangeMemberTypeOptions = (e) => {\n    // console.log(e.value);\n    this.saveState({\n      CompanyMemberType: e.value\n    });\n  }\n\n  onChangeCompanyTypeOption = (e) => {\n    // console.log(e.value);\n    this.saveState({\n      CompanyType: e.value\n    });\n  }\n  \n  render() {\n\n    const { state, onChangeMemberTypeOptions, onChangeCompanyTypeOption, onChangeStatus, onAddCompany } = this;\n    \n    return (\n      <>\n        <SEO title=\"Add Company\" />\n        <div className=\"content-wrapper px-4 py-4\">\n                \n        <Card>\n            <CardBody>\n\n              <Container>\n                  <Row>\n                    <Col breakPoint={{ xs: 12 }}>\n                      <h1 className=\"text-center mb-5\">Add Company</h1>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"justify-content-center align-items-center mb-5\">\n                    <Col className=\"col-lg-12\">\n                    <form>\n                        <Row>\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"CompanyType\">Company Type</label>\n                            <SelectStyled options={state.CompanyTypeData.map(({ CompanyTypeID, CompanyTypeDesc }) => { \n                                  return { value: CompanyTypeID, label: CompanyTypeDesc };\n                                })}  placeholder={state.CompanyTypeDescription} id=\"CompanyType\" name=\"CompanyType\" value={state.CompanyId} onChange ={onChangeCompanyTypeOption.bind(this)}  />\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"MemberType\">Member Type</label>\n                            <SelectStyled options={selectMemberTypeOptions}  placeholder=\"Select\" id=\"MemberType\" name=\"MemberType\" onChange ={onChangeMemberTypeOptions.bind(this)} />\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"CompanyName\">Company Name</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"text\" placeholder=\"\" id=\"CompanyName\" name=\"CompanyName\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }} breakPoint={{ md: 9 }}></Col>\n                          <Col breakPoint={{ xs: 12 }} breakPoint={{ md: 3 }}>\n                              <Button status=\"Success\" type=\"button\" shape=\"SemiRound\" onClick={onAddCompany} fullWidth>Save</Button>\n                          </Col>\n                      </Row>\n                      \n                    </form> \n                    </Col>\n                  </Row>\n\n                </Container>\n\n            </CardBody>\n          </Card>\n          </div>\n      </>\n    );\n  }\n}"],"sourceRoot":""}