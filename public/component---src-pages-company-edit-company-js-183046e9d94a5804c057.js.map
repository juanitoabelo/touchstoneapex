{"version":3,"sources":["webpack:///./src/pages/company/edit-company.js"],"names":["Input","styled","InputGroup","SelectStyled","Select","selectMemberTypeOptions","value","label","selectOONAcceptOptions","selectPopulationServedOptions","selectLevelsOfCareOptions","selectJCHOOptions","selectCARFOptions","selectNetworkOptions","defaultCopanyTyleSelectedOption","defaultOONAcceptSelectOption","isBrowser","window","EditCompany","state","UpdateCompanyInsuranceSuccessState","UpdateCompanySuccessState","CompanyName","CompanyType","CompanyMemberType","CompanyTypeData","tblCompanyInsuranceData","selectInsuranceOptions","companyID","OONAccept","City","State","Zip","JCHO","CARF","ContactName","ContactEmail","ContactPhone","PopulationServed","PopulationServedDisplay","LevelsOfCare","LevelsOfCareDisplay","Network","NetworkValue","Insurance","InsuranceValue","saveState","data","setState","onUpdateCompany","e","axios","method","url","params","tblName","queryType","then","response","catch","error","console","log","onAddInsuranceCo","InsuranceID","InNetwork","CompanyID","CompanyInsuranceID","ID","onDeleteInsuranceCo","CompanyInsuranceIDValue","filter","onChangeStatus","target","name","onChangeMemberTypeOptions","onChangeCompanyTypeOption","onChangeAcceptOONOption","onChangePopulationServedOption","PopulationServedData","map","index","onChangeLevelsOfCareOption","LevelsOfCareData","onChangeJCHOOption","onChangeCARFOption","onChangeNetworkOption","onChangeInsuranceOption","componentWillUnmount","this","componentDidMount","isLoggedIn","location","href","queryString","search","URLSearchParams","get","split","item","JSON","stringify","getCompanyInsuranceID","parseInt","render","title","className","breakPoint","xs","htmlFor","fullWidth","size","type","placeholder","id","onChange","bind","options","CompanyTypeID","CompanyTypeDesc","isMulti","multiple","md","status","shape","onClick","class","scope","insuranceId","InsuanranceName","Name","Component"],"mappings":"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","file":"component---src-pages-company-edit-company-js-183046e9d94a5804c057.js","sourcesContent":["import Select from '@paljs/ui/Select';\nimport { InputGroup } from '@paljs/ui/Input';\nimport { Card, CardBody } from '@paljs/ui/Card';\nimport { ButtonLink } from '@paljs/ui/Button';\nimport { Button } from '@paljs/ui/Button';\nimport { navigate } from 'gatsby';\nimport Col from '@paljs/ui/Col';\nimport Row from '@paljs/ui/Row';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport SEO from '../../components/SEO';\nimport axios from 'axios';\nimport { Container } from '@material-ui/core';\nimport { isLoggedIn } from \"../../components/services/auth\";\n\nconst Input = styled(InputGroup)`\n  margin-bottom: 10px;\n`;\n\nconst SelectStyled = styled(Select)`\n  margin-bottom: 1rem;\n`;\n\nconst selectMemberTypeOptions = [\n  { value: 'Mutual Referent', label: 'Mutual Referent' },\n  { value: 'Referent', label: 'Referent' },\n  { value: 'Resource', label: 'Resource' },\n  { value: 'Contributor', label: 'Contributor' },\n  { value: 'Influencer', label: 'Influencer' },\n  { value: 'Friendly', label: 'Friendly' },\n  { value: 'Advocate', label: 'Advocate' },\n  { value: 'Other', label: 'Other' },\n];\n\nconst selectOONAcceptOptions = [\n    { value: '0', label: 'No' },\n    { value: '1', label: 'Yes' },\n];\n\nconst selectPopulationServedOptions = [\n    { value: '_Adult', label: 'Adult' },\n    { value: '_Adolescent', label: 'Adolescent' },\n    { value: '_Young Adult', label: 'Young Adult' },\n    { value: 'Older Adult', label: 'Older Adult' },\n    { value: '_Adult Male', label: 'Adult Male' },\n    { value: '_Adult Female', label: 'Adult Female' },\n    { value: 'Young Adult Male', label: 'Young Adult Male' },\n    { value: 'Young Adult Female', label: 'Young Adult Female' },\n    { value: 'Adolescent Female', label: 'Adolescent Female' },\n    { value: 'Adolescent Male', label: 'Adolescent Male' },\n    { value: 'Gender Not Known', label: 'Gender Not Known' },\n    { value: 'Gender Not Identified', label: 'Gender Not Identified' },\n    { value: '_LGBTQ+', label: 'LGBTQ+' },\n    { value: 'LGBTQ+ Adult', label: 'LGBTQ+ Adult' },\n    { value: 'LGBTQ+ Adolescent', label: 'LGBTQ+ Adolescent' },\n];\n\nconst selectLevelsOfCareOptions = [\n    { value: 'RES', label: 'RES' },\n    { value: 'PHP', label: 'PHP' },\n    { value: 'IOP', label: 'IOP' },\n    { value: 'OP', label: 'OP' },\n    { value: 'In Patient', label: 'In Patient' },\n    { value: 'Stabalization Only', label: 'Stabalization Only' },\n    { value: 'Detox', label: 'Detox' },\n    { value: 'Other', label: 'Other' },\n];\n\n \n\nconst selectJCHOOptions = [\n    { value: 'No', label: 'No' },\n    { value: 'Yes', label: 'Yes' },\n    { value: 'TBD', label: 'TBD' },\n];\n\nconst selectCARFOptions = [\n    { value: 'No', label: 'No' },\n    { value: 'Yes', label: 'Yes' },\n    { value: 'TBD', label: 'TBD' },\n];\n\n\nconst selectNetworkOptions = [\n    { value: '0', label: 'Out of Network' },\n    { value: '1', label: 'In Network' },\n];\n\n/** Glabal variable to get the default selected options **/\nlet defaultCopanyTyleSelectedOption = 'Select Company Type';\nlet defaultOONAcceptSelectOption = 'Select OON Option';\n\nconst isBrowser = typeof window !== \"undefined\";\n\nexport default class EditCompany extends Component {\n\n  state = {\n    UpdateCompanyInsuranceSuccessState: false,\n    UpdateCompanySuccessState: false,  \n    CompanyName: '',\n    CompanyType: 0,\n    CompanyMemberType: '',\n    CompanyTypeData: [],\n    tblCompanyInsuranceData: [],\n    selectInsuranceOptions: [],\n\n    companyID: '',\n    OONAccept: '',\n    City: '',\n    State: '',\n    Zip: '',\n    JCHO: '',\n    CARF: '',\n    ContactName: '',\n    ContactEmail: '',\n    ContactPhone: '',\n    PopulationServed: '',\n    PopulationServedDisplay: [],\n    LevelsOfCare: '',\n    LevelsOfCareDisplay: [],\n\n    Network: '',\n    NetworkValue: '',\n    Insurance: '',\n    InsuranceValue: ''\n  }\n  \n  componentWillUnmount(){\n    this.setState({\n        UpdateCompanyInsuranceSuccessState: false,\n        UpdateCompanySuccessState: false,\n        CompanyName: '',\n        CompanyType: 0,\n        CompanyMemberType: '',\n        CompanyTypeData: [],\n        tblCompanyInsuranceData: [],\n        selectInsuranceOptions: [],\n\n        companyID: '',\n        OONAccept: '',\n        City: '',\n        State: '',\n        Zip: '',\n        JCHO: '',\n        CARF: '',\n        ContactName: '',\n        ContactEmail: '',\n        ContactPhone: '',\n        PopulationServed: '',\n        PopulationServedDisplay: [],\n        LevelsOfCare: '',\n        LevelsOfCareDisplay: [],\n\n        Network: '',\n        NetworkValue: '',\n        Insurance: '',\n        InsuranceValue: ''\n    })  \n  }\n\n  componentDidMount() {\n    if (!isLoggedIn() && isBrowser ) {\n      window.location.href=\"/\"\n    }\n    const { saveState, state } = this;\n\n    /* getting url parameters */\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const companyID = urlParams.get('companyID');\n\n    this.saveState({\n        companyID: companyID\n    });\n\n     /** Get All Company Type Details **/\n     axios.get('https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php', {\n      params: {\n        tblName: 'tblCompanyType',\n        queryType: 'getAllCompanyType'\n      }\n    })\n    .then(function (response) {\n        //console.log('Company Type Data: '+ JSON.stringify(response.data));\n      saveState({\n        CompanyTypeData: response.data\n      });\n       \n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n    .then(function (response) {\n      // always executed\n      console.log(response,`successfull`);\n    });\n\n\n\n    /** Get All CompaignField Detail **/\n    axios.get('https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php', {\n        params: {\n        tblName: 'tblCompany',\n        queryType: 'getSingleCompanyInfoById',\n        CompanyID: companyID\n        }\n    })\n    .then(function (response) {\n         //console.log('tblCompany Data: '+ JSON.stringify(response.data));\n        saveState({\n            companyID: response.data['CompanyID'],\n            CompanyName: response.data['CompanyName'],\n            CompanyType: response.data['CompanyType'],\n            CompanyMemberType: response.data['MemberType'],\n            OONAccept: response.data['OONAccept'],\n            City: response.data['City'],\n            State: response.data['State'],\n            Zip: response.data['Zip'],\n            JCHO: response.data['JCHO'],\n            CARF: response.data['CARF'],\n            ContactName: response.data['ContactName'],\n            ContactEmail: response.data['ContactEmail'],\n            ContactPhone: response.data['ContactPhone'],\n            PopulationServed: response.data['PopulationServed'],\n            LevelsOfCare: response.data['LevelsOfCare'],\n            PopulationServedDisplay: response.data['PopulationServed'].split(',').map((item)=>({ value: item, label: item })),\n            LevelsOfCareDisplay: response.data['LevelsOfCare'].split(',').map((item)=>({ value: item, label: item }))\n        });\n\n    })\n    .catch(function (error) {\n        console.log(error);\n    })\n    .then(function (response) {\n        // always executed\n        console.log(response,`successfull`);\n    });\n\n\n     /** Get All Company Type Details **/\n     axios.get('https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php', {\n      params: {\n        tblName: 'tblCompanyInsurance',\n        queryType: 'getCompanyInsuranceListByCompanyId',\n        CompanyID: companyID\n      }\n    })\n    .then(function (response) {\n        console.log('Company Type Data: '+ JSON.stringify(response.data));\n        let getCompanyInsuranceID = 0;\n        response.data.map((item)=>{\n          if (parseInt(getCompanyInsuranceID) < parseInt(item.CompanyInsuranceID)) {\n            getCompanyInsuranceID = parseInt(item.CompanyInsuranceID);\n          }\n        });\n      saveState({\n        tblCompanyInsuranceData: response.data\n      });\n       \n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n    .then(function (response) {\n      // always executed\n      console.log(response,`successfull`);\n    });\n\n\n     /** Get All Insurance **/\n     axios.get('https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php', {\n      params: {\n        tblName: 'tblInsurance',\n        queryType: 'getAllInsurance'\n      }\n    })\n    .then(function (response) {\n        //console.log('Company Type Data: '+ JSON.stringify(response.data));\n      saveState({\n        selectInsuranceOptions: response.data\n      });\n       \n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n    .then(function (response) {\n      // always executed\n      console.log(response,`successfull`);\n    });\n\n\n\n  }\n\n  saveState = (data) => {\n    this.setState(data);\n  }\n\n  \n\n  onUpdateCompany = (e) => {\n    \n     const { saveState, state } = this;\n\n      axios({\n        method: 'get',\n        url: 'https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php',\n        params: {\n            tblName: 'tblCompany',\n            queryType: 'updateSingleCompanyInfoById',\n            companyID: this.state.companyID,\n            CompanyName: this.state.CompanyName,\n            CompanyType: this.state.CompanyType,\n            CompanyMemberType: this.state.CompanyMemberType,\n            OONAccept: this.state.OONAccept,\n            City: this.state.City,\n            State: this.state.State,\n            Zip: this.state.Zip,\n            JCHO: this.state.JCHO,\n            CARF: this.state.CARF,\n            ContactName: this.state.ContactName,\n            ContactEmail: this.state.ContactEmail,\n            ContactPhone: this.state.ContactPhone,\n            PopulationServed: this.state.PopulationServed,\n            LevelsOfCare: this.state.LevelsOfCare,\n        }\n      })\n      .then(function (response) {\n        // console.log(response,`Updated New Company successfull`);\n        saveState({\n            UpdateCompanySuccessState: true\n          });\n      })\n      .catch(function (error) {\n        console.log(error,`error`);\n      });\n  }\n  \n\n  onAddInsuranceCo= (e) => {\n    const { saveState, state } = this;\n\n    axios({\n      method: 'get',\n      url: 'https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php',\n      params: {\n          tblName: 'tblCompanyInsurance',\n          queryType: 'addCompanyInsuranceData',\n          companyID: this.state.companyID,\n          InsuranceID: this.state.Insurance,\n          InNetwork: this.state.Network,\n      }\n    })\n    .then(function (response) {\n      saveState({\n        tblCompanyInsuranceData: [\n          ...state.tblCompanyInsuranceData,\n          {\n            CompanyID: state.companyID,\n            CompanyInsuranceID: response.data.ID,\n            InNetwork: state.Network,\n            InsuranceID: state.Insurance\n          }\n        ],\n        Network: '',\n        NetworkValue: '',\n        Insurance: '',\n        InsuranceValue: '',\n        UpdateCompanyInsuranceSuccessState: true,\n      });\n    })\n    .catch(function (error) {\n      console.log(error,`error`);\n    });\n  }\n\n\n  onDeleteInsuranceCo = (CompanyInsuranceIDValue) => {\n    //    console.log(\"test: \"+CompanyInsuranceID);\n    const { saveState, state } = this;\n    axios({\n      method: 'get',\n      url: 'https://touchstone-api.abelocreative.com/touchstone-ajax/ajax.php',\n      params: {\n          tblName: 'tblCompanyInsurance',\n          queryType: 'deleteSingleCompanyInsuranceList',\n          CompanyInsuranceID: CompanyInsuranceIDValue\n      }\n    })\n    .then(function (response) {\n      console.log(response,`Deleted Company Insurance successfull`);\n      saveState({\n        tblCompanyInsuranceData: state.tblCompanyInsuranceData.filter(({ CompanyInsuranceID })=> CompanyInsuranceID != CompanyInsuranceIDValue)\n      });\n    })\n    .catch(function (error) {\n      console.log(error,`error`);\n    });\n\n\n  }\n\n\n  // Save Company Name Field value to a state after user input\n  onChangeStatus = (e) => {\n    console.log(e);\n    switch(e.target.name){\n        case 'CompanyName':\n          this.saveState({\n            CompanyName: e.target.value\n          });\n        break;\n        case 'City':\n          this.saveState({\n            City: e.target.value\n          });\n        break;\n        case 'State':\n            this.saveState({\n                State: e.target.value\n            });\n        break;\n        case 'Zip':\n          this.saveState({\n            Zip: e.target.value\n          });\n        break;\n        \n        case 'ContactName':\n            this.saveState({\n             ContactName: e.target.value\n            });\n        break;  \n        case 'ContactEmail':\n          this.saveState({\n            ContactEmail: e.target.value\n          });\n        break;\n        case 'ContactPhone':\n            this.saveState({\n                ContactPhone: e.target.value\n            });\n        break;  \n    }\n    \n  }\n\n  onChangeMemberTypeOptions = (e) => {\n    //  console.log(e.value);\n    this.saveState({\n      CompanyMemberType: e.value\n    });\n  }\n\n  onChangeCompanyTypeOption = (e) => {\n    //  console.log('Company value: '+e.value);\n    this.saveState({\n      CompanyType: e.value\n    });\n  }\n\n  onChangeAcceptOONOption = (e) => {\n    // console.log(e.value);\n    this.saveState({\n        OONAccept: e.value\n    });\n  }\n\n  onChangePopulationServedOption = (e) => {\n    //  const PopulationServedData = [];\n    let PopulationServedData = '';\n     e.map(({ value, label }, index) => { \n        if(index==0){\n            PopulationServedData = value;\n        } else {\n            PopulationServedData += ','+value;\n        }   \n    \n      })\n    //   console.log(\"PS Data:\"+ PopulationServedData);\n      this.saveState({\n        PopulationServed: PopulationServedData,\n        PopulationServedDisplay: e\n       });\n  }\n  onChangeLevelsOfCareOption = (e) => {\n    let LevelsOfCareData = '';\n     e.map(({ value }, index) => {\n        if(index==0){\n            LevelsOfCareData = value;\n        } else {\n            LevelsOfCareData += ','+value;\n        }   \n      })\n    //  console.log(\"LevelsOfCareData Data:\"+ LevelsOfCareData);\n    this.saveState({\n        LevelsOfCare: LevelsOfCareData,\n        LevelsOfCareDisplay: e\n    });\n  }\n\n  onChangeJCHOOption = (e) => {\n    // console.log(e.value);\n    this.saveState({\n        JCHO: e.value\n    });\n  }\n  \n  onChangeCARFOption = (e) => {\n    // console.log(e.value);\n    this.saveState({\n        CARF: e.value\n    });\n  }\n\n  onChangeNetworkOption = (e) => {\n    this.saveState({\n        Network: e.value,\n        NetworkValue: { ...e }\n    });\n  }\n\n  onChangeInsuranceOption = (e) => {\n    this.saveState({\n        Insurance: e.value,\n        InsuranceValue: { ...e }\n    });\n  }\n\n  \n\n\n  render() {\n\n    const { state, saveState, onChangeMemberTypeOptions, onChangeCompanyTypeOption, onChangeStatus, onUpdateCompany, onChangeAcceptOONOption, onChangePopulationServedOption, onChangeLevelsOfCareOption, onChangeJCHOOption, onChangeCARFOption, onChangeNetworkOption, onChangeInsuranceOption, onAddInsuranceCo, onDeleteInsuranceCo } = this;\n    \n    return (\n      <>\n        <SEO title=\"View/Edit Company\" />\n        <div className=\"content-wrapper px-4 py-4\">\n                \n        <Card>\n            <CardBody>\n\n              <Container>\n                  <Row>\n                    <Col breakPoint={{ xs: 12 }}>\n                      <h1 className=\"text-center mb-5\">View/Edit Company ({this.state.companyID})</h1>\n                    </Col>\n                  </Row>\n                  { this.state.UpdateCompanySuccessState ? <div className=\"text-center text-success\">Successfully Updated Company</div> : null }\n                  <Row className=\"justify-content-center align-items-center mb-5\">\n                    <Col className=\"col-lg-12\">\n                    <form>\n                        <Row>\n                            <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"CompanyName\">Company Name</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"text\" placeholder={this.state.CompanyName} value={this.state.CompanyName} id=\"CompanyType\" name=\"CompanyType\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"CompanyType\">Company Type</label>\n                             \n                            <SelectStyled options={state.CompanyTypeData.map(({ CompanyTypeID, CompanyTypeDesc }) => { \n                                  if(CompanyTypeID == state.CompanyType) {\n                                    defaultCopanyTyleSelectedOption = CompanyTypeDesc;\n                                  }\n                                  return { value: CompanyTypeID, label: CompanyTypeDesc };\n                                })}  placeholder={defaultCopanyTyleSelectedOption} id=\"CompanyType\" name=\"CompanyType\" onChange ={onChangeCompanyTypeOption.bind(this)}  />\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"MemberType\">Member Type</label>\n                            <SelectStyled options={selectMemberTypeOptions.map(({ value, label }) => { \n                                  return { value: value, label: label };\n                                })}  placeholder={this.state.CompanyMemberType} id=\"MemberType\" name=\"MemberType\" onChange ={onChangeMemberTypeOptions.bind(this)} />\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"OONAccept\">Accept OON</label>\n                            <SelectStyled options={selectOONAcceptOptions.map(({ value, label }) => { \n                                  switch(value){\n                                    case '0':\n                                        defaultOONAcceptSelectOption = 'No'\n                                        break;\n                                    case '1':\n                                        defaultOONAcceptSelectOption = 'Yes'\n                                        break;    \n                                  }\n\n                                  return { value: value, label: label };\n                                })}  placeholder={defaultOONAcceptSelectOption} id=\"OONAccept\" name=\"OONAccept\" onChange ={onChangeAcceptOONOption.bind(this)} />\n                          </Col>\n                          \n\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"PopulationServed\">Population Served</label>\n                            <SelectStyled options={selectPopulationServedOptions} isMulti multiple value={this.state.PopulationServedDisplay} id=\"PopulationServed\" name=\"PopulationServed\" onChange ={onChangePopulationServedOption.bind(this)} />\n                          </Col>\n                          \n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"LevelsOfCare\">Levels of Care</label>\n                            <SelectStyled options={selectLevelsOfCareOptions}  isMulti multiple value={this.state.LevelsOfCareDisplay} id=\"LevelsOfCare\" name=\"LevelsOfCare\" onChange ={onChangeLevelsOfCareOption.bind(this)} />\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"City\">City</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"text\" placeholder={this.state.City} value={this.state.City} id=\"City\" name=\"City\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"State\">State</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"text\" placeholder={this.state.State} value={this.state.State} id=\"State\" name=\"State\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"Zip\">Zip</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"number\" placeholder={this.state.Zip} value={this.state.Zip} id=\"Zip\" name=\"Zip\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"ContactName\">Contact Name</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"text\" placeholder={this.state.ContactName} value={this.state.ContactName} id=\"ContactName\" name=\"ContactName\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"ContactEmail\">Contact Email</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"email\" placeholder={this.state.ContactEmail} value={this.state.ContactEmail} id=\"ContactEmail\" name=\"ContactEmail\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                              <label htmlFor=\"ContactPhone\">Contact Phone</label>\n                              <Input fullWidth size=\"Medium\" className=\"Name\">\n                              <input type=\"text\" placeholder={this.state.ContactPhone} value={this.state.ContactPhone} id=\"ContactPhone\" name=\"ContactPhone\" onChange ={onChangeStatus.bind(this)}/>\n                            </Input>\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"JCHO\">JCHO</label> \n                            <SelectStyled options={selectJCHOOptions}  placeholder={this.state.JCHO} id=\"JCHO\" name=\"JCHO\" onChange ={onChangeJCHOOption.bind(this)} />\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }}>\n                            <label htmlFor=\"CARF\">CARF</label>\n                            <SelectStyled options={selectCARFOptions}  placeholder={this.state.CARF} id=\"CARF\" name=\"CARF\" onChange ={onChangeCARFOption.bind(this)} />\n                          </Col>\n\n                          <Col breakPoint={{ xs: 12 }} breakPoint={{ md: 9 }}></Col>\n                          <Col breakPoint={{ xs: 12 }} breakPoint={{ md: 3 }}>\n                              <Button status=\"Success\" type=\"button\" shape=\"SemiRound\" onClick={onUpdateCompany} fullWidth>Save</Button>\n                          </Col>\n                      </Row>\n                      \n                    </form> \n                    </Col>\n                  </Row>\n\n\n                  <Row className=\"justify-content-center align-items-center mb-5\">\n                          <Col breakPoint={{ xs: 12 }} ><h2 className=\"text-center\">Insurance</h2></Col>\n                          <Col breakPoint={{ xs: 12 }} >\n                             <h3>Insurance Co List</h3> \n                        <table class=\"table table-striped mb-5\">\n                        <thead>\n                            <tr>\n                              <th scope=\"col\">CompanyInsurance ID</th>\n                              <th scope=\"col\">Insurance Company</th>\n                              <th scope=\"col\">\tIn Network?</th>\n                              <th scope=\"col\">&nbsp;</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                                {state.tblCompanyInsuranceData.map(({ CompanyInsuranceID, CompanyID, InsuranceID, InNetwork}) => { \n                                    switch(InNetwork){\n                                        case '0':\n                                            InNetwork = 'Out of Network'\n                                            break;\n                                        case '1':\n                                            InNetwork = 'In Network'\n                                            break;    \n                                    }\n\n                                    /** Convert Insurance Id to insurance name **/\n                                    let insuranceId = InsuranceID;\n                                    let InsuanranceName = '';\n                                    {state.selectInsuranceOptions.map(({ InsuranceID, Name }) => { \n                                            if(InsuranceID == insuranceId){\n                                                InsuanranceName = Name;\n                                            }\n                                        })}\n                                        \n                                  return (\n                                    <tr> \n                                      <td>{CompanyInsuranceID}</td>\n                                      <td>{InsuanranceName}</td>\n                                      <td>{InNetwork}</td>\n                                      <td>\n                                        <Button status=\"Success\" type=\"button\" shape=\"SemiRound\" value={CompanyInsuranceID} onClick={onDeleteInsuranceCo.bind(this,CompanyInsuranceID)} fullWidth className=\"text-uppercase\">DELETE</Button>\n                                      </td>\n                                    </tr>\n                                  );\n                                })}\n                          </tbody>\n                        </table>\n                          </Col>\n                          <Col breakPoint={{ xs: 12 }} >\n                                <form>\n                                { this.state.UpdateCompanyInsuranceSuccessState ? <div className=\"text-center text-success mb-5\">Successfully Added Company Insurance Co</div> : null }\n                                <Row className=\"mb-5\">\n                                <Col breakPoint={{ xs: 12 }} className=\"mb-4\">\n                                    <h4>Add a new insurance company</h4>\n                                </Col>\n                                  <Col breakPoint={{ xs: 12 }} breakPoint={{ md: 6 }} className=\"mb-4\">\n                                    <label htmlFor=\"InsuranceID\">Insurance co:</label>\n                                     <SelectStyled options={state.selectInsuranceOptions.map(({ InsuranceID, Name }) => { \n                                    return { value: InsuranceID, label: Name };\n                                    })} placeholder='--Select--' value={this.state.InsuranceValue} id=\"InsuranceID\" name=\"InsuranceID\" onChange ={onChangeInsuranceOption.bind(this)} />\n                                  </Col>\n                                  <Col breakPoint={{ xs: 12 }} breakPoint={{ md: 6 }} >\n                                    <label htmlFor=\"Network\">Network:</label>\n                                     <SelectStyled options={selectNetworkOptions} value={this.state.NetworkValue} id=\"Network\" name=\"Network\" onChange ={onChangeNetworkOption.bind(this)} />\n                                  </Col>\n                                  <Col breakPoint={{ xs: 12 }} breakPoint={{ md: 6 }}>\n                                    <Button status=\"Success\" type=\"button\" shape=\"SemiRound\" onClick={onAddInsuranceCo} fullWidth className=\"text-uppercase\">Add Insurance CO</Button>\n                                </Col>\n                            </Row>\n                                </form>\n                                \n                          </Col>\n                        </Row>\n\n\n                </Container>\n\n            </CardBody>\n          </Card>\n          </div>\n      </>\n    );\n  }\n}"],"sourceRoot":""}