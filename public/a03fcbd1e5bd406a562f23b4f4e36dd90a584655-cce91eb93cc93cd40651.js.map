{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/react-hook-form/dist/index.esm.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","e","_e","f","TypeError","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","isCheckBoxInput","element","type","isNullOrUndefined","isObjectType","isObject","Date","getNodeParentName","substring","search","names","some","current","compact","filter","Boolean","isUndefined","val","_get","obj","path","defaultValue","result","split","reduce","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","omit","source","copy","assign","FormContext","displayName","getProxyFormState","isProxyEnabled","formState","readFormStateRef","localReadFormStateRef","isRoot","Proxy","get","prop","isEmptyObject","keys","shouldRenderFormState","formStateData","find","convertToArrayPayload","isWeb","window","HTMLElement","document","validateAllFieldCriteria","errors","message","types","isKey","stringToPath","input","replace","set","object","index","tempPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","_step","_iterator","field","_f","ref","focus","refs","getFieldsValues","fieldsRef","defaultValuesRef","output","disabled","every","isPrimitive","deepEqual","object1","object2","isErrorObject","keys1","keys2","_i","_keys","val1","val2","setDirtyFields","values","defaultValues","dirtyFields","parentNode","parentName","setFieldArrayDirtyFields","deepMerge","target","targetValue","sourceValue","_a","isString","isBoolean","unset","previousObjRef","updatePath","childObject","baseGet","k","objectRef","currentPaths","currentPathsLength","item","data","getFields","fieldsRefs","_step4","currentFields","_iterator4","isFileInput","isMultipleSelect","concat","isRadioInput","defaultResult","isValid","validResult","getCheckboxValue","options","option","checked","map","attributes","getFieldValueAs","_ref11","valueAsNumber","valueAsDate","setValueAs","NaN","defaultReturn","getRadioValue","previous","getFieldValue","files","_ref12","selected","_ref13","hasValidation","mounted","required","min","max","maxLength","minLength","pattern","validate","skipValidation","_ref14","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","isFunction","isRegex","RegExp","getValidateError","getValueAndMessage","validationData","validateField","_ref16","mark","_callee","_ref15","_ref15$_f","inputValue","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","_ref17","exceedMax","exceedMin","maxOutput","minOutput","valueNumber","valueDate","maxLengthOutput","minLengthOutput","_exceedMax","_exceedMin","_getValueAndMessage","patternValue","_message","validateRef","validateError","validationResult","_i2","_Object$entries","_Object$entries$_i","validateFunction","validateResult","_validateError","wrap","_context","prev","mount","abrupt","bind","maxLengthMessage","minLengthMessage","maxType","minType","parseFloat","match","sent","entries","stop","_x","_x2","getValidationModes","mode","isOnSubmit","isHTMLElement","isRadioOrCheckboxFunction","Subscription","tearDowns","tearDown","push","_step5","_iterator5","teardown","Subscriber","observer","subscription","_this","closed","add","Subject","observers","_step6","_iterator6","subscriber","isWindowUndefined","useForm","_ref18","_ref18$mode","_ref18$reValidateMode","reValidateMode","resolver","context","_ref18$defaultValues","_ref18$shouldFocusErr","shouldFocusError","shouldUnregister","criteriaMode","fieldsNamesRef","Set","formStateSubjectRef","unregisterFieldsNamesRef","watchSubjectRef","controllerSubjectRef","fieldArraySubjectRef","fieldArrayDefaultValuesRef","inFieldArrayActionRef","watchFieldsRef","isMountedRef","fieldsWithValidationRef","validFieldsRef","isWatchAllRef","contextRef","resolverRef","fieldArrayNamesRef","validationMode","isValidateAllFieldCriteria","_React$useState7","isDirty","isValidating","submitCount","touchedFields","isSubmitting","isSubmitSuccessful","_React$useState8","updateFormState","formStateRef","getIsValid","shouldRenderBaseOnError","shouldRender","state","isWatched","previousError","shouldReRender","updatedFormState","setFieldValue","rawValue","shouldRegister","register","forEach","radioRef","selectRef","includes","checkboxRef","shouldDirty","updateAndGetDirtyState","shouldValidate","trigger","getIsDirty","formValues","isFieldDirty","isDirtyFieldExist","previousIsDirty","isChanged","executeValidation","_ref19","_callee2","skipReRender","_context2","t0","_x3","_x4","executeSchemaOrResolverValidation","_ref20","_callee3","currentNames","_yield$resolverRef$cu","_iterator7","_step7","_name","_error","_args3","_context3","_x5","validateForm","_ref21","_callee4","_name2","fieldError","_context4","t1","t2","_x6","_ref22","_callee6","schemaResult","_context6","all","fieldName","_ref23","_callee5","_context5","_x8","_x7","setInternalValues","_ref24","_ref25","inputKey","has","isFieldWatched","updateValidAndValue","isWithinRefCallback","defaultChecked","setValue","isFieldArray","isReset","handleChange","_ref27","_callee7","_ref26","_ref26$target","inputType","_getValidationModes","shouldSkipValidation","_yield$resolverRef$cu2","previousFormIsValid","parentNodeName","currentError","_context7","_x9","getValues","fieldNames","updateIsValid","_callee8","previousIsValid","_yield$resolverRef$cu3","_args8","_context8","clearErrors","inputName","setError","shouldFocus","watchInternal","isGlobal","isArrayNames","fieldValues","_step8","_iterator8","watch","subscribe","unregister","_step9","_iterator9","delete","keepIsValid","keepError","keepValue","keepDirty","keepTouched","keepDefaultValue","registerFieldRef","contains","isInitialRegister","onChange","onBlur","_ref30","_x10","shouldUnmount","handleSubmit","onValid","onInvalid","_ref31","_callee9","hasNoPromiseError","_yield$resolverRef$cu4","_context9","preventDefault","persist","finish","_x11","resetFromState","_ref32","keepErrors","keepIsSubmitted","keepDefaultValues","keepSubmitCount","registerAbsentFields","File","reset","keepStateOptions","updatedValues","keepValues","_step10","_iterator10","_name3","inputRef","closest","setFocus","formStateSubscription","useFieldArraySubscription","unsubscribe","isLiveInDom","_step11","_iterator11","_name4","control"],"mappings":"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","file":"a03fcbd1e5bd406a562f23b4f4e36dd90a584655-cce91eb93cc93cd40651.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import _classCallCheck from \"/Volumes/Drive Uone/Craig/canopy/gatsby/touchstonedashboard/gatsby-admin-template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Drive Uone/Craig/canopy/gatsby/touchstonedashboard/gatsby-admin-template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _asyncToGenerator from \"/Volumes/Drive Uone/Craig/canopy/gatsby/touchstonedashboard/gatsby-admin-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Volumes/Drive Uone/Craig/canopy/gatsby/touchstonedashboard/gatsby-admin-template/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Volumes/Drive Uone/Craig/canopy/gatsby/touchstonedashboard/gatsby-admin-template/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Volumes/Drive Uone/Craig/canopy/gatsby/touchstonedashboard/gatsby-admin-template/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Volumes/Drive Uone/Craig/canopy/gatsby/touchstonedashboard/gatsby-admin-template/node_modules/@babel/runtime/regenerator\";\nimport \"core-js/modules/es.array.sort.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\n\nvar isCheckBoxInput = function isCheckBoxInput(element) {\n  return element.type === 'checkbox';\n};\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value == null;\n};\n\nvar isObjectType = function isObjectType(value) {\n  return typeof value === 'object';\n};\n\nvar isObject = function isObject(value) {\n  return !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !(value instanceof Date);\n};\n\nvar getControllerValue = function getControllerValue(event) {\n  return isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;\n};\n\nvar getNodeParentName = function getNodeParentName(name) {\n  return name.substring(0, name.search(/.\\d/)) || name;\n};\n\nvar isNameInFieldArray = function isNameInFieldArray(names, name) {\n  return _toConsumableArray(names).some(function (current) {\n    return getNodeParentName(name) === current;\n  });\n};\n\nvar compact = function compact(value) {\n  return value.filter(Boolean);\n};\n\nvar isUndefined = function isUndefined(val) {\n  return val === undefined;\n};\n\nvar _get = function get() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var path = arguments.length > 1 ? arguments[1] : undefined;\n  var defaultValue = arguments.length > 2 ? arguments[2] : undefined;\n  var result = compact(path.split(/[,[\\].]+?/)).reduce(function (result, key) {\n    return isNullOrUndefined(result) ? result : result[key];\n  }, obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\n\nvar EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change'\n};\nvar VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nvar SELECT = 'select';\nvar UNDEFINED = 'undefined';\nvar INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\n\nvar omit = function omit(source, key) {\n  var copy = Object.assign({}, source);\n  delete copy[key];\n  return copy;\n};\n\nvar FormContext = React.createContext(null);\nFormContext.displayName = 'RHFContext';\n\nvar useFormContext = function useFormContext() {\n  return React.useContext(FormContext);\n};\n\nvar FormProvider = function FormProvider(props) {\n  return React.createElement(FormContext.Provider, {\n    value: omit(props, 'children')\n  }, props.children);\n};\n\nvar getProxyFormState = function getProxyFormState(isProxyEnabled, formState, readFormStateRef, localReadFormStateRef) {\n  var isRoot = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  return isProxyEnabled ? new Proxy(formState, {\n    get: function get(obj, prop) {\n      if (prop in obj) {\n        if (readFormStateRef.current[prop] !== VALIDATION_MODE.all) {\n          readFormStateRef.current[prop] = isRoot ? VALIDATION_MODE.all : true;\n        }\n\n        localReadFormStateRef && (localReadFormStateRef.current[prop] = true);\n        return obj[prop];\n      }\n\n      return undefined;\n    }\n  }) : formState;\n};\n\nvar isEmptyObject = function isEmptyObject(value) {\n  return isObject(value) && !Object.keys(value).length;\n};\n\nvar shouldRenderFormState = function shouldRenderFormState(formStateData, readFormStateRef, isRoot) {\n  var formState = omit(formStateData, 'name');\n  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(readFormStateRef).length || Object.keys(formState).find(function (key) {\n    return readFormStateRef[key] === (isRoot ? VALIDATION_MODE.all : true);\n  });\n};\n\nvar convertToArrayPayload = function convertToArrayPayload(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\nvar isWeb = typeof window !== UNDEFINED && typeof window.HTMLElement !== UNDEFINED && typeof document !== UNDEFINED;\nvar isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nfunction useFormState(props) {\n  var _ref = props || {},\n      control = _ref.control,\n      name = _ref.name;\n\n  var methods = useFormContext();\n\n  var _ref2 = control || methods.control,\n      formStateRef = _ref2.formStateRef,\n      formStateSubjectRef = _ref2.formStateSubjectRef,\n      readFormStateRef = _ref2.readFormStateRef;\n\n  var nameRef = React.useRef(name);\n  nameRef.current = name;\n\n  var _React$useState = React.useState(formStateRef.current),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formState = _React$useState2[0],\n      updateFormState = _React$useState2[1];\n\n  var readFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  });\n  React.useEffect(function () {\n    var formStateSubscription = formStateSubjectRef.current.subscribe({\n      next: function next(formState) {\n        return (!nameRef.current || !formState.name || convertToArrayPayload(nameRef.current).includes(formState.name)) && shouldRenderFormState(formState, readFormState.current) && updateFormState(Object.assign(Object.assign({}, formStateRef.current), formState));\n      }\n    });\n    return function () {\n      return formStateSubscription.unsubscribe();\n    };\n  }, []);\n  return getProxyFormState(isProxyEnabled, formState, readFormStateRef, readFormState, false);\n}\n\nfunction useController(_ref3) {\n  var name = _ref3.name,\n      rules = _ref3.rules,\n      defaultValue = _ref3.defaultValue,\n      control = _ref3.control,\n      shouldUnregister = _ref3.shouldUnregister;\n  var methods = useFormContext();\n\n  var _ref4 = control || methods.control,\n      defaultValuesRef = _ref4.defaultValuesRef,\n      register = _ref4.register,\n      fieldsRef = _ref4.fieldsRef,\n      unregister = _ref4.unregister,\n      fieldArrayNamesRef = _ref4.fieldArrayNamesRef,\n      controllerSubjectRef = _ref4.controllerSubjectRef,\n      shouldUnmount = _ref4.shouldUnmount,\n      inFieldArrayActionRef = _ref4.inFieldArrayActionRef;\n\n  var _register = register(name, rules),\n      _onChange = _register.onChange,\n      _onBlur = _register.onBlur,\n      _ref5 = _register.ref;\n\n  var isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n  var _React$useState3 = React.useState(isUndefined(_get(fieldsRef.current, name)._f.value) || isFieldArray ? isUndefined(defaultValue) ? _get(defaultValuesRef.current, name) : defaultValue : _get(fieldsRef.current, name)._f.value),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setInputStateValue = _React$useState4[1];\n\n  var formState = useFormState({\n    control: control || methods.control,\n    name: name\n  });\n  _get(fieldsRef.current, name)._f.value = value;\n  React.useEffect(function () {\n    var controllerSubscription = controllerSubjectRef.current.subscribe({\n      next: function next(data) {\n        return (!data.name || name === data.name) && setInputStateValue(_get(data.values, name));\n      }\n    });\n    return function () {\n      controllerSubscription.unsubscribe();\n      var shouldUnmountField = shouldUnmount || shouldUnregister;\n\n      if (isFieldArray ? shouldUnmountField && !inFieldArrayActionRef.current : shouldUnmountField) {\n        unregister(name);\n      } else if (_get(fieldsRef.current, name)) {\n        _get(fieldsRef.current, name)._f.mount = false;\n      }\n    };\n  }, [name]);\n  return {\n    field: {\n      onChange: function onChange(event) {\n        var value = getControllerValue(event);\n        setInputStateValue(value);\n\n        _onChange({\n          target: {\n            value: value,\n            name: name\n          },\n          type: EVENTS.CHANGE\n        });\n      },\n      onBlur: function onBlur() {\n        _onBlur({\n          target: {\n            name: name\n          },\n          type: EVENTS.BLUR\n        });\n      },\n      name: name,\n      value: value,\n      ref: function ref(elm) {\n        return elm && _ref5(elm);\n      }\n    },\n    formState: formState,\n    fieldState: Object.defineProperties({}, {\n      invalid: {\n        get: function get() {\n          return !!_get(formState.errors, name);\n        }\n      },\n      isDirty: {\n        get: function get() {\n          return !!_get(formState.dirtyFields, name);\n        }\n      },\n      isTouched: {\n        get: function get() {\n          return !!_get(formState.touchedFields, name);\n        }\n      },\n      error: {\n        get: function get() {\n          return _get(formState.errors, name);\n        }\n      }\n    })\n  };\n}\n\nvar Controller = function Controller(props) {\n  return props.render(useController(props));\n};\n\nvar appendErrors = function appendErrors(name, validateAllFieldCriteria, errors, type, message) {\n  return validateAllFieldCriteria ? Object.assign(Object.assign({}, errors[name]), {\n    types: Object.assign(Object.assign({}, errors[name] && errors[name].types ? errors[name].types : {}), _defineProperty({}, type, message || true))\n  }) : {};\n};\n\nvar isKey = function isKey(value) {\n  return /^\\w*$/.test(value);\n};\n\nvar stringToPath = function stringToPath(input) {\n  return compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n};\n\nfunction set(object, path, value) {\n  var index = -1;\n  var tempPath = isKey(path) ? [path] : stringToPath(path);\n  var length = tempPath.length;\n  var lastIndex = length - 1;\n\n  while (++index < length) {\n    var key = tempPath[index];\n    var newValue = value;\n\n    if (index !== lastIndex) {\n      var objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n\n  return object;\n}\n\nvar focusFieldBy = function focusFieldBy(fields, callback, fieldsNames) {\n  var _iterator = _createForOfIteratorHelper(fieldsNames || Object.keys(fields)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n\n      var field = _get(fields, key);\n\n      if (field) {\n        var _f = field._f;\n        var current = omit(field, '_f');\n\n        if (_f && callback(_f.name)) {\n          if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n            break;\n          } else if (_f.refs) {\n            _f.refs[0].focus();\n\n            break;\n          }\n        } else if (isObject(current)) {\n          focusFieldBy(current, callback);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar getFieldsValues = function getFieldsValues(fieldsRef, defaultValuesRef) {\n  var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  for (var name in fieldsRef.current) {\n    var field = fieldsRef.current[name];\n\n    if (field) {\n      var _f = field._f;\n      var current = omit(field, '_f');\n      set(output, name, _f && _f.ref ? _f.ref.disabled || _f.refs && _f.refs.every(function (ref) {\n        return ref.disabled;\n      }) ? undefined : _f.value : Array.isArray(field) ? [] : {});\n      current && getFieldsValues({\n        current: current\n      }, defaultValuesRef, output[name]);\n    }\n  }\n\n  return output;\n};\n\nvar generateId = function generateId() {\n  var d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\n\nvar mapIds = function mapIds() {\n  var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var keyName = arguments.length > 1 ? arguments[1] : undefined;\n  return values.map(function (value) {\n    return Object.assign(_defineProperty({}, keyName, value && value[keyName] || generateId()), value);\n  });\n};\n\nvar isPrimitive = function isPrimitive(value) {\n  return isNullOrUndefined(value) || !isObjectType(value);\n};\n\nfunction deepEqual(object1, object2, isErrorObject) {\n  if (isPrimitive(object1) || isPrimitive(object2) || object1 instanceof Date || object2 instanceof Date) {\n    return object1 === object2;\n  }\n\n  if (!React.isValidElement(object1)) {\n    var keys1 = Object.keys(object1);\n    var keys2 = Object.keys(object2);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (var _i = 0, _keys = keys1; _i < _keys.length; _i++) {\n      var key = _keys[_i];\n      var val1 = object1[key];\n\n      if (!(isErrorObject && key === 'ref')) {\n        var val2 = object2[key];\n\n        if ((isObject(val1) || Array.isArray(val1)) && (isObject(val2) || Array.isArray(val2)) ? !deepEqual(val1, val2, isErrorObject) : val1 !== val2) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction deepMerge(target, source) {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (var key in source) {\n    var targetValue = target[key];\n    var sourceValue = source[key];\n\n    try {\n      target[key] = isObject(targetValue) && isObject(sourceValue) || Array.isArray(targetValue) && Array.isArray(sourceValue) ? deepMerge(targetValue, sourceValue) : sourceValue;\n    } catch (_a) {}\n  }\n\n  return target;\n}\n\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n  var index = -1;\n\n  while (++index < values.length) {\n    for (var key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(values[index][key], _get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n      } else {\n        deepEqual(_get(defaultValues[index] || {}, key), values[index][key]) ? set(dirtyFields[index] || {}, key) : dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), _defineProperty({}, key, true));\n      }\n    }\n\n    parentNode && !dirtyFields.length && delete parentNode[parentName];\n  }\n\n  return dirtyFields;\n}\n\nvar setFieldArrayDirtyFields = function setFieldArrayDirtyFields(values, defaultValues, dirtyFields) {\n  return deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n};\n\nfunction append(data, value) {\n  return [].concat(_toConsumableArray(data), _toConsumableArray(convertToArrayPayload(value)));\n}\n\nvar fillEmptyArray = function fillEmptyArray(value) {\n  return Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n};\n\nfunction insert(data, index, value) {\n  return [].concat(_toConsumableArray(data.slice(0, index)), _toConsumableArray(convertToArrayPayload(value)), _toConsumableArray(data.slice(index)));\n}\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar moveArrayAt = function moveArrayAt(data, from, to) {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n\nfunction prepend(data, value) {\n  return [].concat(_toConsumableArray(convertToArrayPayload(value)), _toConsumableArray(data));\n}\n\nfunction removeAtIndexes(data, indexes) {\n  var i = 0;\n\n  var temp = _toConsumableArray(data);\n\n  var _iterator2 = _createForOfIteratorHelper(indexes),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var index = _step2.value;\n      temp.splice(index - i, 1);\n      i++;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nvar removeArrayAt = function removeArrayAt(data, index) {\n  return isUndefined(index) ? [] : removeAtIndexes(data, convertToArrayPayload(index).sort(function (a, b) {\n    return a - b;\n  }));\n};\n\nvar swapArrayAt = function swapArrayAt(data, indexA, indexB) {\n  data[indexA] = [data[indexB], data[indexB] = data[indexA]][0];\n};\n\nvar isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\n\nfunction baseGet(object, updatePath) {\n  var length = updatePath.slice(0, -1).length;\n  var index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction unset(object, path) {\n  var updatePath = isKey(path) ? [path] : stringToPath(path);\n  var childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  var key = updatePath[updatePath.length - 1];\n  var previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (var k = 0; k < updatePath.slice(0, -1).length; k++) {\n    var index = -1;\n    var objectRef = void 0;\n    var currentPaths = updatePath.slice(0, -(k + 1));\n    var currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      var item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (currentPathsLength === index && (isObject(objectRef) && isEmptyObject(objectRef) || Array.isArray(objectRef) && !objectRef.filter(function (data) {\n        return isObject(data) && !isEmptyObject(data) || isBoolean(data);\n      }).length)) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n\nvar useFieldArray = function useFieldArray(_ref6) {\n  var control = _ref6.control,\n      name = _ref6.name,\n      _ref6$keyName = _ref6.keyName,\n      keyName = _ref6$keyName === void 0 ? 'id' : _ref6$keyName,\n      shouldUnregister = _ref6.shouldUnregister;\n  var methods = useFormContext();\n  var focusNameRef = React.useRef('');\n\n  var _ref7 = control || methods.control,\n      isWatchAllRef = _ref7.isWatchAllRef,\n      watchFieldsRef = _ref7.watchFieldsRef,\n      getIsDirty = _ref7.getIsDirty,\n      watchSubjectRef = _ref7.watchSubjectRef,\n      fieldArraySubjectRef = _ref7.fieldArraySubjectRef,\n      fieldArrayNamesRef = _ref7.fieldArrayNamesRef,\n      fieldsRef = _ref7.fieldsRef,\n      defaultValuesRef = _ref7.defaultValuesRef,\n      formStateRef = _ref7.formStateRef,\n      formStateSubjectRef = _ref7.formStateSubjectRef,\n      readFormStateRef = _ref7.readFormStateRef,\n      validFieldsRef = _ref7.validFieldsRef,\n      fieldsWithValidationRef = _ref7.fieldsWithValidationRef,\n      fieldArrayDefaultValuesRef = _ref7.fieldArrayDefaultValuesRef,\n      unregister = _ref7.unregister,\n      shouldUnmount = _ref7.shouldUnmount,\n      inFieldArrayActionRef = _ref7.inFieldArrayActionRef;\n\n  var _React$useState5 = React.useState(mapIds(_get(fieldsRef.current, name) ? _get(getFieldsValues(fieldsRef), name) : _get(fieldArrayDefaultValuesRef.current, getNodeParentName(name)) ? _get(fieldArrayDefaultValuesRef.current, name, []) : _get(defaultValuesRef.current, name, []), keyName)),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      fields = _React$useState6[0],\n      setFields = _React$useState6[1];\n\n  set(fieldArrayDefaultValuesRef.current, name, _toConsumableArray(fields));\n  fieldArrayNamesRef.current.add(name);\n\n  var omitKey = function omitKey(fields) {\n    return fields.map(function (field) {\n      return omit(field || {}, keyName);\n    });\n  };\n\n  var getCurrentFieldsValues = function getCurrentFieldsValues() {\n    var values = _get(getFieldsValues(fieldsRef), name, []);\n\n    return mapIds(_get(fieldArrayDefaultValuesRef.current, name, []).map(function (item, index) {\n      return Object.assign(Object.assign({}, item), values[index]);\n    }), keyName);\n  };\n\n  var getFocusDetail = function getFocusDetail(index, options) {\n    return options ? !isUndefined(options.focusIndex) ? \"\".concat(name, \".\").concat(options.focusIndex) : options.focusName ? options.focusName : !options.shouldFocus ? '' : \"\".concat(name, \".\").concat(index) : \"\".concat(name, \".\").concat(index);\n  };\n\n  var resetFields = function resetFields(index) {\n    return convertToArrayPayload(index).forEach(function (currentIndex) {\n      return set(fieldsRef.current, \"\".concat(name).concat(isUndefined(currentIndex) ? '' : \".\".concat(currentIndex)), isUndefined(currentIndex) ? [] : undefined);\n    });\n  };\n\n  var setFieldsAndNotify = function setFieldsAndNotify() {\n    var fieldsValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return setFields(mapIds(fieldsValues, keyName));\n  };\n\n  var cleanup = function cleanup(ref) {\n    return !compact(_get(ref, name, [])).length && unset(ref, name);\n  };\n\n  var updateDirtyFieldsWithDefaultValues = function updateDirtyFieldsWithDefaultValues(updatedFieldArrayValues) {\n    return updatedFieldArrayValues && set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), _get(defaultValuesRef.current, name, []), _get(formStateRef.current.dirtyFields, name, [])));\n  };\n\n  var batchStateUpdate = function batchStateUpdate(method, args) {\n    var updatedFieldArrayValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var shouldSet = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    inFieldArrayActionRef.current = true;\n\n    if (_get(fieldsRef.current, name)) {\n      var output = method(_get(fieldsRef.current, name), args.argA, args.argB);\n      shouldSet && set(fieldsRef.current, name, output);\n    }\n\n    if (Array.isArray(_get(formStateRef.current.errors, name))) {\n      var _output = method(_get(formStateRef.current.errors, name), args.argA, args.argB);\n\n      shouldSet && set(formStateRef.current.errors, name, _output);\n      cleanup(formStateRef.current.errors);\n    }\n\n    if (readFormStateRef.current.touchedFields && _get(formStateRef.current.touchedFields, name)) {\n      var _output2 = method(_get(formStateRef.current.touchedFields, name), args.argA, args.argB);\n\n      shouldSet && set(formStateRef.current.touchedFields, name, _output2);\n      cleanup(formStateRef.current.touchedFields);\n    }\n\n    if (readFormStateRef.current.dirtyFields || readFormStateRef.current.isDirty) {\n      set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), _get(defaultValuesRef.current, name, []), _get(formStateRef.current.dirtyFields, name, [])));\n      updateDirtyFieldsWithDefaultValues(updatedFieldArrayValues);\n      cleanup(formStateRef.current.dirtyFields);\n    }\n\n    if (readFormStateRef.current.isValid) {\n      set(validFieldsRef.current, name, method(_get(validFieldsRef.current, name, []), args.argA));\n      cleanup(validFieldsRef.current);\n      set(fieldsWithValidationRef.current, name, method(_get(fieldsWithValidationRef.current, name, []), args.argA));\n      cleanup(fieldsWithValidationRef.current);\n    }\n\n    formStateSubjectRef.current.next({\n      isDirty: getIsDirty(name, omitKey(updatedFieldArrayValues)),\n      errors: formStateRef.current.errors,\n      isValid: formStateRef.current.isValid\n    });\n  };\n\n  var registerFieldArray = function registerFieldArray(values) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var parentName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    return values.forEach(function (appendValueItem, valueIndex) {\n      return !isPrimitive(appendValueItem) && Object.entries(appendValueItem).forEach(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 2),\n            key = _ref9[0],\n            value = _ref9[1];\n\n        var inputName = \"\".concat(parentName || name, \".\").concat(parentName ? valueIndex : index + valueIndex, \".\").concat(key);\n        Array.isArray(value) ? registerFieldArray(value, valueIndex, inputName) : set(fieldsRef.current, inputName, {\n          _f: {\n            ref: {\n              name: inputName\n            },\n            name: inputName,\n            value: value\n          }\n        });\n      });\n    });\n  };\n\n  var append$1 = function append$1(value, options) {\n    var appendValue = convertToArrayPayload(value);\n    var updatedFieldArrayValues = append(getCurrentFieldsValues(), appendValue);\n    var currentIndex = updatedFieldArrayValues.length - appendValue.length;\n    setFieldsAndNotify(updatedFieldArrayValues);\n    batchStateUpdate(append, {\n      argA: fillEmptyArray(value)\n    }, updatedFieldArrayValues, false);\n    registerFieldArray(appendValue, currentIndex);\n    focusNameRef.current = getFocusDetail(currentIndex, options);\n  };\n\n  var prepend$1 = function prepend$1(value, options) {\n    var prependValue = convertToArrayPayload(value);\n    var updatedFieldArrayValues = prepend(getCurrentFieldsValues(), prependValue);\n    setFieldsAndNotify(updatedFieldArrayValues);\n    batchStateUpdate(prepend, {\n      argA: fillEmptyArray(value)\n    }, updatedFieldArrayValues);\n    registerFieldArray(prependValue);\n    focusNameRef.current = getFocusDetail(0, options);\n  };\n\n  var remove = function remove(index) {\n    var updatedFieldArrayValues = removeArrayAt(getCurrentFieldsValues(), index);\n    resetFields(index);\n    setFieldsAndNotify(updatedFieldArrayValues);\n    batchStateUpdate(removeArrayAt, {\n      argA: index\n    }, updatedFieldArrayValues);\n  };\n\n  var insert$1 = function insert$1(index, value, options) {\n    var insertValue = convertToArrayPayload(value);\n    var updatedFieldArrayValues = insert(getCurrentFieldsValues(), index, insertValue);\n    setFieldsAndNotify(updatedFieldArrayValues);\n    batchStateUpdate(insert, {\n      argA: index,\n      argB: fillEmptyArray(value)\n    }, updatedFieldArrayValues);\n    registerFieldArray(insertValue, index);\n    focusNameRef.current = getFocusDetail(index, options);\n  };\n\n  var swap = function swap(indexA, indexB) {\n    var fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    batchStateUpdate(swapArrayAt, {\n      argA: indexA,\n      argB: indexB\n    }, fieldValues, false);\n    setFieldsAndNotify(fieldValues);\n  };\n\n  var move = function move(from, to) {\n    var fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    setFieldsAndNotify(fieldValues);\n    batchStateUpdate(moveArrayAt, {\n      argA: from,\n      argB: to\n    }, fieldValues, false);\n  };\n\n  React.useEffect(function () {\n    inFieldArrayActionRef.current = false;\n\n    if (isWatchAllRef.current) {\n      formStateSubjectRef.current.next({});\n    } else {\n      var _iterator3 = _createForOfIteratorHelper(watchFieldsRef.current),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var watchField = _step3.value;\n\n          if (name.startsWith(watchField)) {\n            formStateSubjectRef.current.next({});\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    watchSubjectRef.current.next({\n      name: name,\n      value: _get(getFieldsValues(fieldsRef), name, [])\n    });\n    focusNameRef.current && focusFieldBy(fieldsRef.current, function (key) {\n      return isString(key) && key.startsWith(focusNameRef.current);\n    });\n    focusNameRef.current = '';\n    fieldArraySubjectRef.current.next({\n      name: name,\n      fields: omitKey(_toConsumableArray(fields))\n    });\n  }, [fields, name]);\n  React.useEffect(function () {\n    var fieldArraySubscription = fieldArraySubjectRef.current.subscribe({\n      next: function next(_ref10) {\n        var inputFieldArrayName = _ref10.name,\n            fields = _ref10.fields,\n            isReset = _ref10.isReset;\n\n        if (isReset) {\n          unset(fieldsRef.current, inputFieldArrayName || name);\n          inputFieldArrayName ? set(fieldArrayDefaultValuesRef.current, inputFieldArrayName, fields) : fieldArrayDefaultValuesRef.current = fields;\n          setFieldsAndNotify(_get(fieldArrayDefaultValuesRef.current, name));\n        }\n      }\n    });\n    !_get(fieldsRef.current, name) && set(fieldsRef.current, name, []);\n    return function () {\n      fieldArraySubscription.unsubscribe();\n      (shouldUnmount || shouldUnregister) && unregister(name);\n    };\n  }, []);\n  return {\n    swap: React.useCallback(swap, [name]),\n    move: React.useCallback(move, [name]),\n    prepend: React.useCallback(prepend$1, [name]),\n    append: React.useCallback(append$1, [name]),\n    remove: React.useCallback(remove, [name]),\n    insert: React.useCallback(insert$1, [name]),\n    fields: fields\n  };\n};\n\nfunction getFields(fieldsNames, fieldsRefs) {\n  var currentFields = {};\n\n  var _iterator4 = _createForOfIteratorHelper(fieldsNames),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var name = _step4.value;\n\n      var field = _get(fieldsRefs, name);\n\n      if (field) {\n        !isKey(name) ? set(currentFields, name, field._f) : currentFields[name] = field._f;\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return currentFields;\n}\n\nvar isFileInput = function isFileInput(element) {\n  return element.type === 'file';\n};\n\nvar isMultipleSelect = function isMultipleSelect(element) {\n  return element.type === \"\".concat(SELECT, \"-multiple\");\n};\n\nvar isRadioInput = function isRadioInput(element) {\n  return element.type === 'radio';\n};\n\nvar defaultResult = {\n  value: false,\n  isValid: false\n};\nvar validResult = {\n  value: true,\n  isValid: true\n};\n\nvar getCheckboxValue = function getCheckboxValue(options) {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      var values = options.filter(function (option) {\n        return option && option.checked && !option.disabled;\n      }).map(function (option) {\n        return option.value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n\n    return options[0].checked && !options[0].disabled ? // @ts-expect-error expected to work in the browser\n    options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === '' ? validResult : {\n      value: options[0].value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n\n  return defaultResult;\n};\n\nvar getFieldValueAs = function getFieldValueAs(value, _ref11) {\n  var valueAsNumber = _ref11.valueAsNumber,\n      valueAsDate = _ref11.valueAsDate,\n      setValueAs = _ref11.setValueAs;\n  return valueAsNumber ? value === '' ? NaN : +value : valueAsDate ? new Date(value) : setValueAs ? setValueAs(value) : value;\n};\n\nvar getMultipleSelectValue = function getMultipleSelectValue(options) {\n  return _toConsumableArray(options).filter(function (_ref12) {\n    var selected = _ref12.selected;\n    return selected;\n  }).map(function (_ref13) {\n    var value = _ref13.value;\n    return value;\n  });\n};\n\nvar defaultReturn = {\n  isValid: false,\n  value: null\n};\n\nvar getRadioValue = function getRadioValue(options) {\n  return Array.isArray(options) ? options.reduce(function (previous, option) {\n    return option && option.checked && !option.disabled ? {\n      isValid: true,\n      value: option.value\n    } : previous;\n  }, defaultReturn) : defaultReturn;\n};\n\nfunction getFieldValue(field) {\n  if (field && field._f) {\n    var ref = field._f.ref;\n\n    if (ref.disabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field._f.refs).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBoxInput(ref)) {\n      return getCheckboxValue(field._f.refs).value;\n    }\n\n    return getFieldValueAs(isUndefined(ref.value) ? field._f.ref.value : ref.value, field._f);\n  }\n}\n\nvar hasValidation = function hasValidation(options, mounted) {\n  return options && mounted && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);\n};\n\nvar skipValidation = function skipValidation(_ref14) {\n  var isOnBlur = _ref14.isOnBlur,\n      isOnChange = _ref14.isOnChange,\n      isOnTouch = _ref14.isOnTouch,\n      isTouched = _ref14.isTouched,\n      isReValidateOnBlur = _ref14.isReValidateOnBlur,\n      isReValidateOnChange = _ref14.isReValidateOnChange,\n      isBlurEvent = _ref14.isBlurEvent,\n      isSubmitted = _ref14.isSubmitted,\n      isOnAll = _ref14.isOnAll;\n\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n\n  return true;\n};\n\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n\nvar isMessage = function isMessage(value) {\n  return isString(value) || React.isValidElement(value);\n};\n\nvar isRegex = function isRegex(value) {\n  return value instanceof RegExp;\n};\n\nfunction getValidateError(result, ref) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n\n  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {\n    return {\n      type: type,\n      message: isMessage(result) ? result : '',\n      ref: ref\n    };\n  }\n}\n\nvar getValueAndMessage = function getValueAndMessage(validationData) {\n  return isObject(validationData) && !isRegex(validationData) ? validationData : {\n    value: validationData,\n    message: ''\n  };\n};\n\nvar validateField = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref15, validateAllFieldCriteria) {\n    var _ref15$_f, ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, inputValue, valueAsNumber, mount, error, isRadio, isCheckBox, isRadioOrCheckbox, isEmpty, appendErrorsCurry, getMinMaxMessage, _ref17, value, message, exceedMax, exceedMin, maxOutput, minOutput, valueNumber, valueDate, maxLengthOutput, minLengthOutput, _exceedMax, _exceedMin, _getValueAndMessage, patternValue, _message, validateRef, result, validateError, validationResult, _i2, _Object$entries, _Object$entries$_i, key, validateFunction, validateResult, _validateError;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref15$_f = _ref15._f, ref = _ref15$_f.ref, refs = _ref15$_f.refs, required = _ref15$_f.required, maxLength = _ref15$_f.maxLength, minLength = _ref15$_f.minLength, min = _ref15$_f.min, max = _ref15$_f.max, pattern = _ref15$_f.pattern, validate = _ref15$_f.validate, name = _ref15$_f.name, inputValue = _ref15$_f.value, valueAsNumber = _ref15$_f.valueAsNumber, mount = _ref15$_f.mount;\n\n            if (mount) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 3:\n            error = {};\n            isRadio = isRadioInput(ref);\n            isCheckBox = isCheckBoxInput(ref);\n            isRadioOrCheckbox = isRadio || isCheckBox;\n            isEmpty = (valueAsNumber || isFileInput(ref)) && !ref.value || inputValue === '' || Array.isArray(inputValue) && !inputValue.length;\n            appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n\n            getMinMaxMessage = function getMinMaxMessage(exceedMax, maxLengthMessage, minLengthMessage) {\n              var maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n              var minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n              var message = exceedMax ? maxLengthMessage : minLengthMessage;\n              error[name] = Object.assign({\n                type: exceedMax ? maxType : minType,\n                message: message,\n                ref: ref\n              }, appendErrorsCurry(exceedMax ? maxType : minType, message));\n            };\n\n            if (!(required && (!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid))) {\n              _context.next = 16;\n              break;\n            }\n\n            _ref17 = isMessage(required) ? {\n              value: !!required,\n              message: required\n            } : getValueAndMessage(required), value = _ref17.value, message = _ref17.message;\n\n            if (!value) {\n              _context.next = 16;\n              break;\n            }\n\n            error[name] = Object.assign({\n              type: INPUT_VALIDATION_RULES.required,\n              message: message,\n              ref: isRadioOrCheckbox ? (refs || [])[0] || {} : ref\n            }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n\n            if (validateAllFieldCriteria) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", error);\n\n          case 16:\n            if (!((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && inputValue !== '')) {\n              _context.next = 24;\n              break;\n            }\n\n            maxOutput = getValueAndMessage(max);\n            minOutput = getValueAndMessage(min);\n\n            if (!isNaN(inputValue)) {\n              valueNumber = ref.valueAsNumber || parseFloat(inputValue);\n\n              if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n              }\n\n              if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n              }\n            } else {\n              valueDate = ref.valueAsDate || new Date(inputValue);\n\n              if (isString(maxOutput.value)) {\n                exceedMax = valueDate > new Date(maxOutput.value);\n              }\n\n              if (isString(minOutput.value)) {\n                exceedMin = valueDate < new Date(minOutput.value);\n              }\n            }\n\n            if (!(exceedMax || exceedMin)) {\n              _context.next = 24;\n              break;\n            }\n\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n\n            if (validateAllFieldCriteria) {\n              _context.next = 24;\n              break;\n            }\n\n            return _context.abrupt(\"return\", error);\n\n          case 24:\n            if (!(isString(inputValue) && !isEmpty && (maxLength || minLength))) {\n              _context.next = 33;\n              break;\n            }\n\n            maxLengthOutput = getValueAndMessage(maxLength);\n            minLengthOutput = getValueAndMessage(minLength);\n            _exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > maxLengthOutput.value;\n            _exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < minLengthOutput.value;\n\n            if (!(_exceedMax || _exceedMin)) {\n              _context.next = 33;\n              break;\n            }\n\n            getMinMaxMessage(_exceedMax, maxLengthOutput.message, minLengthOutput.message);\n\n            if (validateAllFieldCriteria) {\n              _context.next = 33;\n              break;\n            }\n\n            return _context.abrupt(\"return\", error);\n\n          case 33:\n            if (!(isString(inputValue) && pattern && !isEmpty)) {\n              _context.next = 39;\n              break;\n            }\n\n            _getValueAndMessage = getValueAndMessage(pattern), patternValue = _getValueAndMessage.value, _message = _getValueAndMessage.message;\n\n            if (!(isRegex(patternValue) && !inputValue.match(patternValue))) {\n              _context.next = 39;\n              break;\n            }\n\n            error[name] = Object.assign({\n              type: INPUT_VALIDATION_RULES.pattern,\n              message: _message,\n              ref: ref\n            }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, _message));\n\n            if (validateAllFieldCriteria) {\n              _context.next = 39;\n              break;\n            }\n\n            return _context.abrupt(\"return\", error);\n\n          case 39:\n            if (!validate) {\n              _context.next = 71;\n              break;\n            }\n\n            validateRef = isRadioOrCheckbox && refs ? refs[0] : ref;\n\n            if (!isFunction(validate)) {\n              _context.next = 52;\n              break;\n            }\n\n            _context.next = 44;\n            return validate(inputValue);\n\n          case 44:\n            result = _context.sent;\n            validateError = getValidateError(result, validateRef);\n\n            if (!validateError) {\n              _context.next = 50;\n              break;\n            }\n\n            error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n\n            if (validateAllFieldCriteria) {\n              _context.next = 50;\n              break;\n            }\n\n            return _context.abrupt(\"return\", error);\n\n          case 50:\n            _context.next = 71;\n            break;\n\n          case 52:\n            if (!isObject(validate)) {\n              _context.next = 71;\n              break;\n            }\n\n            validationResult = {};\n            _i2 = 0, _Object$entries = Object.entries(validate);\n\n          case 55:\n            if (!(_i2 < _Object$entries.length)) {\n              _context.next = 67;\n              break;\n            }\n\n            _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2), key = _Object$entries$_i[0], validateFunction = _Object$entries$_i[1];\n\n            if (!(!isEmptyObject(validationResult) && !validateAllFieldCriteria)) {\n              _context.next = 59;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 67);\n\n          case 59:\n            _context.next = 61;\n            return validateFunction(inputValue);\n\n          case 61:\n            validateResult = _context.sent;\n            _validateError = getValidateError(validateResult, validateRef, key);\n\n            if (_validateError) {\n              validationResult = Object.assign(Object.assign({}, _validateError), appendErrorsCurry(key, _validateError.message));\n\n              if (validateAllFieldCriteria) {\n                error[name] = validationResult;\n              }\n            }\n\n          case 64:\n            _i2++;\n            _context.next = 55;\n            break;\n\n          case 67:\n            if (isEmptyObject(validationResult)) {\n              _context.next = 71;\n              break;\n            }\n\n            error[name] = Object.assign({\n              ref: validateRef\n            }, validationResult);\n\n            if (validateAllFieldCriteria) {\n              _context.next = 71;\n              break;\n            }\n\n            return _context.abrupt(\"return\", error);\n\n          case 71:\n            return _context.abrupt(\"return\", error);\n\n          case 72:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function validateField(_x, _x2) {\n    return _ref16.apply(this, arguments);\n  };\n}();\n\nvar getValidationModes = function getValidationModes(mode) {\n  return {\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched\n  };\n};\n\nvar isHTMLElement = function isHTMLElement(value) {\n  return value instanceof HTMLElement;\n};\n\nvar isRadioOrCheckboxFunction = function isRadioOrCheckboxFunction(ref) {\n  return isRadioInput(ref) || isCheckBoxInput(ref);\n};\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription() {\n    _classCallCheck(this, Subscription);\n\n    this.tearDowns = [];\n  }\n\n  _createClass(Subscription, [{\n    key: \"add\",\n    value: function add(tearDown) {\n      this.tearDowns.push(tearDown);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var _iterator5 = _createForOfIteratorHelper(this.tearDowns),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var teardown = _step5.value;\n          teardown();\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.tearDowns = [];\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar Subscriber = /*#__PURE__*/function () {\n  function Subscriber(observer, subscription) {\n    var _this = this;\n\n    _classCallCheck(this, Subscriber);\n\n    this.observer = observer;\n    this.closed = false;\n    subscription.add(function () {\n      return _this.closed = true;\n    });\n  }\n\n  _createClass(Subscriber, [{\n    key: \"next\",\n    value: function next(value) {\n      if (!this.closed) {\n        this.observer.next(value);\n      }\n    }\n  }]);\n\n  return Subscriber;\n}();\n\nvar Subject = /*#__PURE__*/function () {\n  function Subject() {\n    _classCallCheck(this, Subject);\n\n    this.observers = [];\n  }\n\n  _createClass(Subject, [{\n    key: \"next\",\n    value: function next(value) {\n      var _iterator6 = _createForOfIteratorHelper(this.observers),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var observer = _step6.value;\n          observer.next(value);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      var subscription = new Subscription();\n      var subscriber = new Subscriber(observer, subscription);\n      this.observers.push(subscriber);\n      return subscription;\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.observers = [];\n    }\n  }]);\n\n  return Subject;\n}();\n\nvar isWindowUndefined = typeof window === UNDEFINED;\n\nfunction useForm() {\n  var _ref18 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref18$mode = _ref18.mode,\n      mode = _ref18$mode === void 0 ? VALIDATION_MODE.onSubmit : _ref18$mode,\n      _ref18$reValidateMode = _ref18.reValidateMode,\n      reValidateMode = _ref18$reValidateMode === void 0 ? VALIDATION_MODE.onChange : _ref18$reValidateMode,\n      resolver = _ref18.resolver,\n      context = _ref18.context,\n      _ref18$defaultValues = _ref18.defaultValues,\n      defaultValues = _ref18$defaultValues === void 0 ? {} : _ref18$defaultValues,\n      _ref18$shouldFocusErr = _ref18.shouldFocusError,\n      shouldFocusError = _ref18$shouldFocusErr === void 0 ? true : _ref18$shouldFocusErr,\n      shouldUnregister = _ref18.shouldUnregister,\n      criteriaMode = _ref18.criteriaMode;\n\n  var fieldsRef = React.useRef({});\n  var fieldsNamesRef = React.useRef(new Set());\n  var formStateSubjectRef = React.useRef(new Subject());\n  var unregisterFieldsNamesRef = React.useRef(new Set());\n  var watchSubjectRef = React.useRef(new Subject());\n  var controllerSubjectRef = React.useRef(new Subject());\n  var fieldArraySubjectRef = React.useRef(new Subject());\n  var fieldArrayDefaultValuesRef = React.useRef({});\n  var inFieldArrayActionRef = React.useRef(false);\n  var watchFieldsRef = React.useRef(new Set());\n  var isMountedRef = React.useRef(false);\n  var fieldsWithValidationRef = React.useRef({});\n  var validFieldsRef = React.useRef({});\n  var defaultValuesRef = React.useRef(defaultValues);\n  var isWatchAllRef = React.useRef(false);\n  var contextRef = React.useRef(context);\n  var resolverRef = React.useRef(resolver);\n  var fieldArrayNamesRef = React.useRef(new Set());\n  var validationMode = getValidationModes(mode);\n  var isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n\n  var _React$useState7 = React.useState({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: !validationMode.isOnSubmit,\n    errors: {}\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      formState = _React$useState8[0],\n      updateFormState = _React$useState8[1];\n\n  var readFormStateRef = React.useRef({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touchedFields: !isProxyEnabled,\n    isValidating: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n    errors: !isProxyEnabled\n  });\n  var formStateRef = React.useRef(formState);\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  var getIsValid = function getIsValid() {\n    return formStateRef.current.isValid = deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) && isEmptyObject(formStateRef.current.errors);\n  };\n\n  var shouldRenderBaseOnError = React.useCallback(function (name, error) {\n    var shouldRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var isValid = arguments.length > 4 ? arguments[4] : undefined;\n    var isWatched = arguments.length > 5 ? arguments[5] : undefined;\n\n    var previousError = _get(formStateRef.current.errors, name);\n\n    var shouldReRender = shouldRender || !deepEqual(previousError, error, true) || readFormStateRef.current.isValid && isUndefined(error) && _get(fieldsWithValidationRef.current, name) && !_get(validFieldsRef.current, name);\n\n    if (error) {\n      unset(validFieldsRef.current, name);\n      shouldReRender = shouldReRender || !previousError || !deepEqual(previousError, error, true);\n      set(formStateRef.current.errors, name, error);\n    } else {\n      if (_get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n        set(validFieldsRef.current, name, true);\n        shouldReRender = shouldReRender || previousError;\n      }\n\n      unset(formStateRef.current.errors, name);\n    }\n\n    if (shouldReRender && !isNullOrUndefined(shouldRender) || !isEmptyObject(state) || isWatched) {\n      var updatedFormState = Object.assign(Object.assign({}, state), {\n        isValid: resolverRef.current ? !!isValid : getIsValid(),\n        errors: formStateRef.current.errors,\n        name: name\n      });\n      formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), updatedFormState);\n      formStateSubjectRef.current.next(isWatched ? {\n        name: name\n      } : updatedFormState);\n    }\n\n    formStateSubjectRef.current.next({\n      isValidating: false\n    });\n  }, []);\n  var setFieldValue = React.useCallback(function (name, rawValue) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var shouldRender = arguments.length > 3 ? arguments[3] : undefined;\n    var shouldRegister = arguments.length > 4 ? arguments[4] : undefined;\n    shouldRegister && register(name);\n\n    var _f = _get(fieldsRef.current, name, {})._f;\n\n    if (_f) {\n      var value = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(rawValue) ? '' : rawValue;\n      _f.value = getFieldValueAs(rawValue, _f);\n\n      if (isRadioInput(_f.ref)) {\n        (_f.refs || []).forEach(function (radioRef) {\n          return radioRef.checked = radioRef.value === value;\n        });\n      } else if (isFileInput(_f.ref) && !isString(value)) {\n        _f.ref.files = value;\n      } else if (isMultipleSelect(_f.ref)) {\n        _toConsumableArray(_f.ref.options).forEach(function (selectRef) {\n          return selectRef.selected = value.includes(selectRef.value);\n        });\n      } else if (isCheckBoxInput(_f.ref) && _f.refs) {\n        _f.refs.length > 1 ? _f.refs.forEach(function (checkboxRef) {\n          return checkboxRef.checked = Array.isArray(value) ? !!value.find(function (data) {\n            return data === checkboxRef.value;\n          }) : value === checkboxRef.value;\n        }) : _f.refs[0].checked = !!value;\n      } else {\n        _f.ref.value = value;\n      }\n\n      if (shouldRender) {\n        var values = getFieldsValues(fieldsRef);\n        set(values, name, rawValue);\n        controllerSubjectRef.current.next({\n          values: Object.assign(Object.assign({}, defaultValuesRef.current), values),\n          name: name\n        });\n      }\n\n      options.shouldDirty && updateAndGetDirtyState(name, value);\n      options.shouldValidate && trigger(name);\n    }\n  }, []);\n  var getIsDirty = React.useCallback(function (name, data) {\n    var formValues = getFieldsValues(fieldsRef);\n    name && data && set(formValues, name, data);\n    return !deepEqual(formValues, defaultValuesRef.current);\n  }, []);\n  var updateAndGetDirtyState = React.useCallback(function (name, inputValue) {\n    var shouldRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) {\n      var isFieldDirty = !deepEqual(_get(defaultValuesRef.current, name), inputValue);\n\n      var isDirtyFieldExist = _get(formStateRef.current.dirtyFields, name);\n\n      var previousIsDirty = formStateRef.current.isDirty;\n      isFieldDirty ? set(formStateRef.current.dirtyFields, name, true) : unset(formStateRef.current.dirtyFields, name);\n      formStateRef.current.isDirty = getIsDirty();\n      var state = {\n        isDirty: formStateRef.current.isDirty,\n        dirtyFields: formStateRef.current.dirtyFields,\n        name: name\n      };\n\n      var isChanged = readFormStateRef.current.isDirty && previousIsDirty !== state.isDirty || readFormStateRef.current.dirtyFields && isDirtyFieldExist !== _get(formStateRef.current.dirtyFields, name);\n\n      isChanged && shouldRender && formStateSubjectRef.current.next(state);\n      return isChanged ? state : {};\n    }\n\n    return {};\n  }, []);\n  var executeValidation = React.useCallback( /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, skipReRender) {\n      var error;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return validateField(_get(fieldsRef.current, name), isValidateAllFieldCriteria);\n\n            case 2:\n              _context2.t0 = name;\n              error = _context2.sent[_context2.t0];\n              shouldRenderBaseOnError(name, error, skipReRender);\n              return _context2.abrupt(\"return\", isUndefined(error));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref19.apply(this, arguments);\n    };\n  }(), [isValidateAllFieldCriteria]);\n  var executeSchemaOrResolverValidation = React.useCallback( /*#__PURE__*/function () {\n    var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(names) {\n      var currentNames,\n          _yield$resolverRef$cu,\n          errors,\n          _iterator7,\n          _step7,\n          _name,\n          _error,\n          _args3 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              currentNames = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : [];\n              _context3.next = 3;\n              return resolverRef.current(getFieldsValues(fieldsRef), contextRef.current, {\n                criteriaMode: criteriaMode,\n                names: currentNames,\n                fields: getFields(fieldsNamesRef.current, fieldsRef.current)\n              });\n\n            case 3:\n              _yield$resolverRef$cu = _context3.sent;\n              errors = _yield$resolverRef$cu.errors;\n              _iterator7 = _createForOfIteratorHelper(names);\n\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  _name = _step7.value;\n                  _error = _get(errors, _name);\n                  _error ? set(formStateRef.current.errors, _name, _error) : unset(formStateRef.current.errors, _name);\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n\n              return _context3.abrupt(\"return\", errors);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x5) {\n      return _ref20.apply(this, arguments);\n    };\n  }(), [criteriaMode]);\n\n  var validateForm = /*#__PURE__*/function () {\n    var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(fieldsRef) {\n      var isValid, _name2, field, _f, current, fieldError;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              isValid = true;\n              _context4.t0 = _regeneratorRuntime.keys(fieldsRef);\n\n            case 2:\n              if ((_context4.t1 = _context4.t0()).done) {\n                _context4.next = 19;\n                break;\n              }\n\n              _name2 = _context4.t1.value;\n              field = fieldsRef[_name2];\n\n              if (!field) {\n                _context4.next = 17;\n                break;\n              }\n\n              _f = field._f;\n              current = omit(field, '_f');\n\n              if (!_f) {\n                _context4.next = 13;\n                break;\n              }\n\n              _context4.next = 11;\n              return validateField(field, isValidateAllFieldCriteria);\n\n            case 11:\n              fieldError = _context4.sent;\n\n              if (fieldError[_f.name]) {\n                isValid = false;\n                set(formStateRef.current.errors, _f.name, fieldError[_f.name]);\n                unset(validFieldsRef.current, _f.name);\n              } else if (_get(fieldsWithValidationRef.current, _f.name)) {\n                set(validFieldsRef.current, _f.name, true);\n                unset(formStateRef.current.errors, _f.name);\n              }\n\n            case 13:\n              _context4.t2 = current;\n\n              if (!_context4.t2) {\n                _context4.next = 17;\n                break;\n              }\n\n              _context4.next = 17;\n              return validateForm(current);\n\n            case 17:\n              _context4.next = 2;\n              break;\n\n            case 19:\n              return _context4.abrupt(\"return\", isValid);\n\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function validateForm(_x6) {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n\n  var trigger = React.useCallback( /*#__PURE__*/function () {\n    var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(name) {\n      var fields, isValid, schemaResult;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              fields = isUndefined(name) ? Object.keys(fieldsRef.current) : convertToArrayPayload(name);\n              schemaResult = {};\n              formStateSubjectRef.current.next({\n                isValidating: true\n              });\n\n              if (!resolverRef.current) {\n                _context6.next = 10;\n                break;\n              }\n\n              _context6.next = 6;\n              return executeSchemaOrResolverValidation(fields, isUndefined(name) ? undefined : fields);\n\n            case 6:\n              schemaResult = _context6.sent;\n              isValid = fields.every(function (name) {\n                return !_get(schemaResult, name);\n              });\n              _context6.next = 20;\n              break;\n\n            case 10:\n              if (!isUndefined(name)) {\n                _context6.next = 16;\n                break;\n              }\n\n              _context6.next = 13;\n              return validateForm(fieldsRef.current);\n\n            case 13:\n              _context6.t0 = _context6.sent;\n              _context6.next = 19;\n              break;\n\n            case 16:\n              _context6.next = 18;\n              return Promise.all(fields.filter(function (fieldName) {\n                return _get(fieldsRef.current, fieldName);\n              }).map( /*#__PURE__*/function () {\n                var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(fieldName) {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return executeValidation(fieldName, null);\n\n                        case 2:\n                          return _context5.abrupt(\"return\", _context5.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x8) {\n                  return _ref23.apply(this, arguments);\n                };\n              }()));\n\n            case 18:\n              _context6.t0 = _context6.sent.every(Boolean);\n\n            case 19:\n              isValid = _context6.t0;\n\n            case 20:\n              formStateSubjectRef.current.next(Object.assign(Object.assign({}, isString(name) ? {\n                name: name\n              } : {}), {\n                errors: formStateRef.current.errors,\n                isValidating: false,\n                isValid: resolverRef.current ? isEmptyObject(schemaResult) : getIsValid()\n              }));\n              return _context6.abrupt(\"return\", isValid);\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x7) {\n      return _ref22.apply(this, arguments);\n    };\n  }(), [executeSchemaOrResolverValidation, executeValidation]);\n  var setInternalValues = React.useCallback(function (name, value, options) {\n    return Object.entries(value).forEach(function (_ref24) {\n      var _ref25 = _slicedToArray(_ref24, 2),\n          inputKey = _ref25[0],\n          inputValue = _ref25[1];\n\n      var fieldName = \"\".concat(name, \".\").concat(inputKey);\n\n      var field = _get(fieldsRef.current, fieldName);\n\n      var isFieldArray = fieldArrayNamesRef.current.has(name);\n      isFieldArray || field && !field._f ? setInternalValues(fieldName, inputValue, options) : setFieldValue(fieldName, inputValue, options, true, !field);\n    });\n  }, [trigger]);\n\n  var isFieldWatched = function isFieldWatched(name) {\n    return isWatchAllRef.current || watchFieldsRef.current.has(name) || watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n  };\n\n  var updateValidAndValue = function updateValidAndValue(name, options, ref, isWithinRefCallback) {\n    var field = _get(fieldsRef.current, name);\n\n    var defaultValue = isUndefined(field._f.value) ? _get(defaultValuesRef.current, name) : field._f.value;\n\n    if (field && !isUndefined(defaultValue)) {\n      if (ref && ref.defaultChecked) {\n        field._f.value = getFieldValue(field);\n      } else if (!isNameInFieldArray(fieldArrayNamesRef.current, name)) {\n        setFieldValue(name, defaultValue);\n      } else {\n        field._f.value = defaultValue;\n      }\n    }\n\n    if ((!isUndefined(defaultValue) || isWithinRefCallback) && hasValidation(options, field._f.mount) && !validationMode.isOnSubmit && field && readFormStateRef.current.isValid) {\n      validateField(field, isValidateAllFieldCriteria).then(function (error) {\n        isEmptyObject(error) ? set(validFieldsRef.current, name, true) : unset(validFieldsRef.current, name);\n        formStateRef.current.isValid !== getIsValid() && updateFormState(Object.assign(Object.assign({}, formStateRef.current), {\n          isValid: getIsValid()\n        }));\n      });\n    }\n\n    return defaultValue;\n  };\n\n  var setValue = function setValue(name, value) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var field = _get(fieldsRef.current, name);\n\n    var isFieldArray = fieldArrayNamesRef.current.has(name);\n\n    if (isFieldArray) {\n      fieldArraySubjectRef.current.next({\n        fields: value,\n        name: name,\n        isReset: true\n      });\n\n      if ((readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) && options.shouldDirty) {\n        set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, _get(defaultValuesRef.current, name, []), _get(formStateRef.current.dirtyFields, name, [])));\n        formStateSubjectRef.current.next({\n          name: name,\n          dirtyFields: formStateRef.current.dirtyFields,\n          isDirty: getIsDirty(name, value)\n        });\n      }\n\n      !value.length && set(fieldsRef.current, name, []) && set(fieldArrayDefaultValuesRef.current, name, []);\n    }\n\n    field && !field._f || isFieldArray ? setInternalValues(name, value, isFieldArray ? {} : options) : setFieldValue(name, value, options, true, !field);\n    isFieldWatched(name) && formStateSubjectRef.current.next({});\n    watchSubjectRef.current.next({\n      name: name,\n      value: value\n    });\n  };\n\n  var handleChange = React.useCallback( /*#__PURE__*/function () {\n    var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref26) {\n      var type, target, _ref26$target, value, inputType, name, error, isValid, field, inputValue, isBlurEvent, _getValidationModes, isReValidateOnBlur, isReValidateOnChange, shouldSkipValidation, isWatched, state, shouldRender, _yield$resolverRef$cu2, errors, previousFormIsValid, parentNodeName, currentError;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              type = _ref26.type, target = _ref26.target, _ref26$target = _ref26.target, value = _ref26$target.value, inputType = _ref26$target.type;\n              name = target.name;\n              field = _get(fieldsRef.current, name);\n\n              if (!field) {\n                _context7.next = 36;\n                break;\n              }\n\n              inputValue = inputType ? getFieldValue(field) : undefined;\n              inputValue = isUndefined(inputValue) ? value : inputValue;\n              isBlurEvent = type === EVENTS.BLUR;\n              _getValidationModes = getValidationModes(reValidateMode), isReValidateOnBlur = _getValidationModes.isOnBlur, isReValidateOnChange = _getValidationModes.isOnChange;\n              shouldSkipValidation = !hasValidation(field._f, field._f.mount) && !resolverRef.current && !_get(formStateRef.current.errors, name) || skipValidation(Object.assign({\n                isBlurEvent: isBlurEvent,\n                isTouched: !!_get(formStateRef.current.touchedFields, name),\n                isSubmitted: formStateRef.current.isSubmitted,\n                isReValidateOnBlur: isReValidateOnBlur,\n                isReValidateOnChange: isReValidateOnChange\n              }, validationMode));\n              isWatched = !isBlurEvent && isFieldWatched(name);\n\n              if (!isUndefined(inputValue)) {\n                field._f.value = inputValue;\n              }\n\n              state = updateAndGetDirtyState(name, field._f.value, false);\n\n              if (isBlurEvent && !_get(formStateRef.current.touchedFields, name)) {\n                set(formStateRef.current.touchedFields, name, true);\n                readFormStateRef.current.touchedFields && (state.touchedFields = formStateRef.current.touchedFields);\n              }\n\n              shouldRender = !isEmptyObject(state) || isWatched;\n\n              if (!shouldSkipValidation) {\n                _context7.next = 17;\n                break;\n              }\n\n              !isBlurEvent && watchSubjectRef.current.next({\n                name: name,\n                type: type,\n                value: inputValue\n              });\n              return _context7.abrupt(\"return\", shouldRender && formStateSubjectRef.current.next(isWatched ? {\n                name: name\n              } : Object.assign(Object.assign({}, state), {\n                name: name\n              })));\n\n            case 17:\n              formStateSubjectRef.current.next({\n                isValidating: true\n              });\n\n              if (!resolverRef.current) {\n                _context7.next = 30;\n                break;\n              }\n\n              _context7.next = 21;\n              return resolverRef.current(getFieldsValues(fieldsRef), contextRef.current, {\n                criteriaMode: criteriaMode,\n                fields: getFields([name], fieldsRef.current),\n                names: [name]\n              });\n\n            case 21:\n              _yield$resolverRef$cu2 = _context7.sent;\n              errors = _yield$resolverRef$cu2.errors;\n              previousFormIsValid = formStateRef.current.isValid;\n              error = _get(errors, name);\n\n              if (isCheckBoxInput(target) && !error) {\n                parentNodeName = getNodeParentName(name);\n                currentError = _get(errors, parentNodeName, {});\n                currentError.type && currentError.message && (error = currentError);\n\n                if (currentError || _get(formStateRef.current.errors, parentNodeName)) {\n                  name = parentNodeName;\n                }\n              }\n\n              isValid = isEmptyObject(errors);\n              previousFormIsValid !== isValid && (shouldRender = true);\n              _context7.next = 34;\n              break;\n\n            case 30:\n              _context7.next = 32;\n              return validateField(field, isValidateAllFieldCriteria);\n\n            case 32:\n              _context7.t0 = name;\n              error = _context7.sent[_context7.t0];\n\n            case 34:\n              !isBlurEvent && watchSubjectRef.current.next({\n                name: name,\n                type: type,\n                value: inputValue\n              });\n              shouldRenderBaseOnError(name, error, shouldRender, state, isValid, isWatched);\n\n            case 36:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x9) {\n      return _ref27.apply(this, arguments);\n    };\n  }(), []);\n\n  var getValues = function getValues(fieldNames) {\n    var values = Object.assign(Object.assign({}, defaultValuesRef.current), getFieldsValues(fieldsRef));\n    return isUndefined(fieldNames) ? values : isString(fieldNames) ? _get(values, fieldNames) : fieldNames.map(function (name) {\n      return _get(values, name);\n    });\n  };\n\n  var updateIsValid = React.useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n    var values,\n        previousIsValid,\n        _yield$resolverRef$cu3,\n        errors,\n        _args8 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            values = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n            previousIsValid = formStateRef.current.isValid;\n\n            if (!resolver) {\n              _context8.next = 10;\n              break;\n            }\n\n            _context8.next = 5;\n            return resolverRef.current(Object.assign(Object.assign({}, getFieldsValues(fieldsRef)), values), contextRef.current, {\n              criteriaMode: criteriaMode,\n              fields: getFields(fieldsNamesRef.current, fieldsRef.current)\n            });\n\n          case 5:\n            _yield$resolverRef$cu3 = _context8.sent;\n            errors = _yield$resolverRef$cu3.errors;\n            formStateRef.current.isValid = isEmptyObject(errors);\n            _context8.next = 11;\n            break;\n\n          case 10:\n            getIsValid();\n\n          case 11:\n            previousIsValid !== formStateRef.current.isValid && formStateSubjectRef.current.next({\n              isValid: formStateRef.current.isValid\n            });\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  })), [criteriaMode]);\n\n  var clearErrors = function clearErrors(name) {\n    name ? convertToArrayPayload(name).forEach(function (inputName) {\n      return unset(formStateRef.current.errors, inputName);\n    }) : formStateRef.current.errors = {};\n    formStateSubjectRef.current.next({\n      errors: formStateRef.current.errors\n    });\n  };\n\n  var setError = function setError(name, error, options) {\n    var ref = ((_get(fieldsRef.current, name) || {\n      _f: {}\n    })._f || {}).ref;\n    set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), {\n      ref: ref\n    }));\n    formStateSubjectRef.current.next({\n      name: name,\n      errors: formStateRef.current.errors,\n      isValid: false\n    });\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  var watchInternal = React.useCallback(function (fieldNames, defaultValue, isGlobal) {\n    var isArrayNames = Array.isArray(fieldNames);\n    var fieldValues = isMountedRef.current ? Object.assign(Object.assign({}, defaultValuesRef.current), getFieldsValues(fieldsRef)) : isUndefined(defaultValue) ? defaultValuesRef.current : isArrayNames ? defaultValue || {} : _defineProperty({}, fieldNames, defaultValue);\n\n    if (isUndefined(fieldNames)) {\n      isGlobal && (isWatchAllRef.current = true);\n      return fieldValues;\n    }\n\n    var result = [];\n\n    var _iterator8 = _createForOfIteratorHelper(convertToArrayPayload(fieldNames)),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var fieldName = _step8.value;\n        isGlobal && watchFieldsRef.current.add(fieldName);\n        result.push(_get(fieldValues, fieldName));\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    return isArrayNames ? result : result[0];\n  }, []);\n\n  var watch = function watch(fieldName, defaultValue) {\n    return isFunction(fieldName) ? watchSubjectRef.current.subscribe({\n      next: function next(info) {\n        return fieldName(watchInternal(undefined, defaultValue), info);\n      }\n    }) : watchInternal(fieldName, defaultValue, true);\n  };\n\n  var unregister = function unregister(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _iterator9 = _createForOfIteratorHelper(name ? convertToArrayPayload(name) : Object.keys(fieldsNamesRef.current)),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var inputName = _step9.value;\n        fieldsNamesRef.current.delete(inputName);\n        fieldArrayNamesRef.current.delete(inputName);\n\n        if (_get(fieldsRef.current, inputName)) {\n          if (!options.keepIsValid) {\n            unset(fieldsWithValidationRef.current, inputName);\n            unset(validFieldsRef.current, inputName);\n          }\n\n          !options.keepError && unset(formStateRef.current.errors, inputName);\n          !options.keepValue && unset(fieldsRef.current, inputName);\n          !options.keepDirty && unset(formStateRef.current.dirtyFields, inputName);\n          !options.keepTouched && unset(formStateRef.current.touchedFields, inputName);\n          !shouldUnregister && !options.keepDefaultValue && unset(defaultValuesRef.current, inputName);\n          watchSubjectRef.current.next({\n            name: inputName\n          });\n        }\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    formStateSubjectRef.current.next(Object.assign(Object.assign(Object.assign({}, formStateRef.current), !options.keepDirty ? {} : {\n      isDirty: getIsDirty()\n    }), resolverRef.current ? {} : {\n      isValid: getIsValid()\n    }));\n    !options.keepIsValid && updateIsValid();\n  };\n\n  var registerFieldRef = function registerFieldRef(name, ref, options) {\n    register(name, options);\n\n    var field = _get(fieldsRef.current, name);\n\n    var isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n\n    if (ref === field._f.ref || isWeb && isHTMLElement(field._f.ref) && !isHTMLElement(ref) || isRadioOrCheckbox && Array.isArray(field._f.refs) && compact(field._f.refs).find(function (option) {\n      return option === ref;\n    })) {\n      return;\n    }\n\n    field = {\n      _f: isRadioOrCheckbox ? Object.assign(Object.assign({}, field._f), {\n        refs: [].concat(_toConsumableArray(compact(field._f.refs || []).filter(function (ref) {\n          return isHTMLElement(ref) && document.contains(ref);\n        })), [ref]),\n        ref: {\n          type: ref.type,\n          name: name\n        }\n      }) : Object.assign(Object.assign({}, field._f), {\n        ref: ref\n      })\n    };\n    set(fieldsRef.current, name, field);\n    var defaultValue = updateValidAndValue(name, options, ref, true);\n\n    if (isRadioOrCheckbox && Array.isArray(defaultValue) ? !deepEqual(_get(fieldsRef.current, name)._f.value, defaultValue) : isUndefined(_get(fieldsRef.current, name)._f.value)) {\n      _get(fieldsRef.current, name)._f.value = getFieldValue(_get(fieldsRef.current, name));\n    }\n  };\n\n  var register = React.useCallback(function (name, options) {\n    var isInitialRegister = !_get(fieldsRef.current, name);\n    set(fieldsRef.current, name, {\n      _f: Object.assign(Object.assign(Object.assign({}, isInitialRegister ? {\n        ref: {\n          name: name\n        }\n      } : Object.assign({\n        ref: (_get(fieldsRef.current, name)._f || {}).ref\n      }, _get(fieldsRef.current, name)._f)), {\n        name: name,\n        mount: true\n      }), options)\n    });\n    hasValidation(options, true) && set(fieldsWithValidationRef.current, name, true);\n    fieldsNamesRef.current.add(name);\n    isInitialRegister && updateValidAndValue(name, options);\n    return isWindowUndefined ? {\n      name: name\n    } : {\n      name: name,\n      onChange: handleChange,\n      onBlur: handleChange,\n      ref: function (_ref30) {\n        function ref(_x10) {\n          return _ref30.apply(this, arguments);\n        }\n\n        ref.toString = function () {\n          return _ref30.toString();\n        };\n\n        return ref;\n      }(function (ref) {\n        if (ref) {\n          registerFieldRef(name, ref, options);\n        } else {\n          var field = _get(fieldsRef.current, name);\n\n          var shouldUnmount = shouldUnregister || options && options.shouldUnregister;\n          field && (field._f.mount = false);\n\n          if (isWeb && (isNameInFieldArray(fieldArrayNamesRef.current, name) ? shouldUnmount && !inFieldArrayActionRef.current : shouldUnmount)) {\n            unregisterFieldsNamesRef.current.add(name);\n          }\n        }\n      })\n    };\n  }, [defaultValuesRef.current]);\n  var handleSubmit = React.useCallback(function (onValid, onInvalid) {\n    return /*#__PURE__*/function () {\n      var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(e) {\n        var hasNoPromiseError, fieldValues, _yield$resolverRef$cu4, errors, values;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (e) {\n                  e.preventDefault && e.preventDefault();\n                  e.persist && e.persist();\n                }\n\n                hasNoPromiseError = true;\n                fieldValues = getFieldsValues(fieldsRef);\n                formStateSubjectRef.current.next({\n                  isSubmitting: true\n                });\n                _context9.prev = 4;\n\n                if (!resolverRef.current) {\n                  _context9.next = 15;\n                  break;\n                }\n\n                _context9.next = 8;\n                return resolverRef.current(fieldValues, contextRef.current, {\n                  criteriaMode: criteriaMode,\n                  fields: getFields(fieldsNamesRef.current, fieldsRef.current)\n                });\n\n              case 8:\n                _yield$resolverRef$cu4 = _context9.sent;\n                errors = _yield$resolverRef$cu4.errors;\n                values = _yield$resolverRef$cu4.values;\n                formStateRef.current.errors = errors;\n                fieldValues = values;\n                _context9.next = 17;\n                break;\n\n              case 15:\n                _context9.next = 17;\n                return validateForm(fieldsRef.current);\n\n              case 17:\n                if (!(isEmptyObject(formStateRef.current.errors) && Object.keys(formStateRef.current.errors).every(function (name) {\n                  return _get(fieldValues, name);\n                }))) {\n                  _context9.next = 23;\n                  break;\n                }\n\n                formStateSubjectRef.current.next({\n                  errors: {},\n                  isSubmitting: true\n                });\n                _context9.next = 21;\n                return onValid(fieldValues, e);\n\n              case 21:\n                _context9.next = 28;\n                break;\n\n              case 23:\n                _context9.t0 = onInvalid;\n\n                if (!_context9.t0) {\n                  _context9.next = 27;\n                  break;\n                }\n\n                _context9.next = 27;\n                return onInvalid(formStateRef.current.errors, e);\n\n              case 27:\n                shouldFocusError && focusFieldBy(fieldsRef.current, function (key) {\n                  return _get(formStateRef.current.errors, key);\n                }, fieldsNamesRef.current);\n\n              case 28:\n                _context9.next = 33;\n                break;\n\n              case 30:\n                _context9.prev = 30;\n                _context9.t1 = _context9[\"catch\"](4);\n                hasNoPromiseError = false;\n\n              case 33:\n                _context9.prev = 33;\n                formStateRef.current.isSubmitted = true;\n                formStateSubjectRef.current.next({\n                  isSubmitted: true,\n                  isSubmitting: false,\n                  isSubmitSuccessful: isEmptyObject(formStateRef.current.errors) && hasNoPromiseError,\n                  submitCount: formStateRef.current.submitCount + 1,\n                  errors: formStateRef.current.errors\n                });\n                return _context9.finish(33);\n\n              case 37:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[4, 30, 33, 37]]);\n      }));\n\n      return function (_x11) {\n        return _ref31.apply(this, arguments);\n      };\n    }();\n  }, [shouldFocusError, isValidateAllFieldCriteria, criteriaMode]);\n  var resetFromState = React.useCallback(function (_ref32, values) {\n    var keepErrors = _ref32.keepErrors,\n        keepDirty = _ref32.keepDirty,\n        keepIsSubmitted = _ref32.keepIsSubmitted,\n        keepTouched = _ref32.keepTouched,\n        keepDefaultValues = _ref32.keepDefaultValues,\n        keepIsValid = _ref32.keepIsValid,\n        keepSubmitCount = _ref32.keepSubmitCount;\n\n    if (!keepIsValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n    formStateSubjectRef.current.next({\n      submitCount: keepSubmitCount ? formStateRef.current.submitCount : 0,\n      isDirty: keepDirty ? formStateRef.current.isDirty : keepDefaultValues ? deepEqual(values, defaultValuesRef.current) : false,\n      isSubmitted: keepIsSubmitted ? formStateRef.current.isSubmitted : false,\n      isValid: keepIsValid ? formStateRef.current.isValid : !!updateIsValid(values),\n      dirtyFields: keepDirty ? formStateRef.current.dirtyFields : {},\n      touchedFields: keepTouched ? formStateRef.current.touchedFields : {},\n      errors: keepErrors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  }, []);\n\n  var registerAbsentFields = function registerAbsentFields(value) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    !_get(fieldsRef.current, name) && (isPrimitive(value) || isWeb && (value instanceof File || value instanceof Date)) && set(fieldsRef.current, name, {\n      _f: {\n        ref: {\n          name: name,\n          value: value\n        },\n        value: value,\n        name: name\n      }\n    });\n\n    if (Array.isArray(value) || isObject(value)) {\n      if (name && !_get(fieldsRef.current, name)) {\n        set(fieldsRef.current, name, Array.isArray(value) ? [] : {});\n      }\n\n      for (var key in value) {\n        registerAbsentFields(value[key], name + (name ? '.' : '') + key);\n      }\n    }\n  };\n\n  var reset = function reset(values) {\n    var keepStateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var updatedValues = values || defaultValuesRef.current;\n\n    if (isWeb && !keepStateOptions.keepValues) {\n      var _iterator10 = _createForOfIteratorHelper(fieldsNamesRef.current),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var _name3 = _step10.value;\n\n          var field = _get(fieldsRef.current, _name3);\n\n          if (field && field._f) {\n            var inputRef = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;\n\n            try {\n              isHTMLElement(inputRef) && inputRef.closest('form').reset();\n              break;\n            } catch (_a) {}\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n\n    !keepStateOptions.keepDefaultValues && (defaultValuesRef.current = Object.assign({}, updatedValues));\n\n    if (!keepStateOptions.keepValues) {\n      fieldsRef.current = {};\n      controllerSubjectRef.current.next({\n        values: Object.assign({}, updatedValues)\n      });\n      watchSubjectRef.current.next({\n        value: Object.assign({}, updatedValues)\n      });\n      fieldArraySubjectRef.current.next({\n        fields: Object.assign({}, updatedValues),\n        isReset: true\n      });\n    }\n\n    !keepStateOptions.keepDefaultValues && registerAbsentFields(Object.assign({}, updatedValues));\n    resetFromState(keepStateOptions, values);\n  };\n\n  var setFocus = function setFocus(name) {\n    return _get(fieldsRef.current, name)._f.ref.focus();\n  };\n\n  React.useEffect(function () {\n    registerAbsentFields(defaultValuesRef.current);\n    var formStateSubscription = formStateSubjectRef.current.subscribe({\n      next: function next(formState) {\n        if (shouldRenderFormState(formState, readFormStateRef.current, true)) {\n          formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), formState);\n          updateFormState(formStateRef.current);\n        }\n      }\n    });\n    var useFieldArraySubscription = fieldArraySubjectRef.current.subscribe({\n      next: function next(state) {\n        if (state.fields && state.name && readFormStateRef.current.isValid) {\n          var values = getFieldsValues(fieldsRef);\n          set(values, state.name, state.fields);\n          updateIsValid(values);\n        }\n      }\n    });\n    resolverRef.current && readFormStateRef.current.isValid && updateIsValid();\n    return function () {\n      watchSubjectRef.current.unsubscribe();\n      formStateSubscription.unsubscribe();\n      useFieldArraySubscription.unsubscribe();\n    };\n  }, []);\n  React.useEffect(function () {\n    var isLiveInDom = function isLiveInDom(ref) {\n      return !isHTMLElement(ref) || !document.contains(ref);\n    };\n\n    isMountedRef.current = true;\n\n    var _iterator11 = _createForOfIteratorHelper(unregisterFieldsNamesRef.current),\n        _step11;\n\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var _name4 = _step11.value;\n\n        var field = _get(fieldsRef.current, _name4);\n\n        field && (field._f.refs ? field._f.refs.every(isLiveInDom) : isLiveInDom(field._f.ref)) && unregister(_name4);\n      }\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n\n    unregisterFieldsNamesRef.current = new Set();\n  });\n  return {\n    control: React.useMemo(function () {\n      return {\n        register: register,\n        isWatchAllRef: isWatchAllRef,\n        inFieldArrayActionRef: inFieldArrayActionRef,\n        watchFieldsRef: watchFieldsRef,\n        getIsDirty: getIsDirty,\n        formStateSubjectRef: formStateSubjectRef,\n        fieldArraySubjectRef: fieldArraySubjectRef,\n        controllerSubjectRef: controllerSubjectRef,\n        watchSubjectRef: watchSubjectRef,\n        watchInternal: watchInternal,\n        fieldsRef: fieldsRef,\n        validFieldsRef: validFieldsRef,\n        fieldsWithValidationRef: fieldsWithValidationRef,\n        fieldArrayNamesRef: fieldArrayNamesRef,\n        readFormStateRef: readFormStateRef,\n        formStateRef: formStateRef,\n        defaultValuesRef: defaultValuesRef,\n        fieldArrayDefaultValuesRef: fieldArrayDefaultValuesRef,\n        unregister: unregister,\n        shouldUnmount: shouldUnregister\n      };\n    }, []),\n    formState: getProxyFormState(isProxyEnabled, formState, readFormStateRef),\n    trigger: trigger,\n    register: register,\n    handleSubmit: handleSubmit,\n    watch: React.useCallback(watch, []),\n    setValue: React.useCallback(setValue, [setInternalValues]),\n    getValues: React.useCallback(getValues, []),\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    unregister: React.useCallback(unregister, []),\n    setError: React.useCallback(setError, []),\n    setFocus: React.useCallback(setFocus, [])\n  };\n}\n\nfunction useWatch(props) {\n  var _ref33 = props || {},\n      control = _ref33.control,\n      name = _ref33.name,\n      defaultValue = _ref33.defaultValue;\n\n  var methods = useFormContext();\n  var nameRef = React.useRef(name);\n  nameRef.current = name;\n\n  var _ref34 = control || methods.control,\n      watchInternal = _ref34.watchInternal,\n      watchSubjectRef = _ref34.watchSubjectRef;\n\n  var _React$useState9 = React.useState(isUndefined(defaultValue) ? watchInternal(name) : defaultValue),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      value = _React$useState10[0],\n      updateValue = _React$useState10[1];\n\n  React.useEffect(function () {\n    watchInternal(name);\n    var watchSubscription = watchSubjectRef.current.subscribe({\n      next: function next(_ref35) {\n        var inputName = _ref35.name,\n            value = _ref35.value;\n        return (!nameRef.current || !inputName || convertToArrayPayload(nameRef.current).some(function (fieldName) {\n          return inputName && fieldName && (fieldName.startsWith(inputName) || inputName.startsWith(fieldName));\n        })) && updateValue(isString(inputName) && nameRef.current === inputName && !isUndefined(value) ? value : watchInternal(nameRef.current, defaultValue));\n      }\n    });\n    return function () {\n      return watchSubscription.unsubscribe();\n    };\n  }, []);\n  return value;\n}\n\nexport { Controller, FormProvider, appendErrors, _get as get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };"],"sourceRoot":""}