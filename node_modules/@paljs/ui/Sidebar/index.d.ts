import React from 'react';
import { BreakPointKeys } from '../breakpoints';
export interface SidebarStyleProps {
    state?: 'hidden' | 'visible' | 'compacted' | 'expanded';
    property?: 'right' | 'left' | 'start' | 'end';
    fixed?: boolean;
    containerFixed?: boolean;
    getState?: (state?: 'hidden' | 'visible' | 'compacted' | 'expanded') => void;
    className?: string;
}
export interface SidebarProps extends SidebarStyleProps {
    compactedBreakpoints?: BreakPointKeys[];
    hiddenBreakpoints?: BreakPointKeys[];
    responsive?: boolean;
    children?: React.ReactNode[] | React.ReactNode;
    ref?: React.RefObject<SidebarRefObject>;
}
export interface SidebarRefObject {
    toggle: () => void;
    hide: () => void;
}
declare const Sidebar: React.ForwardRefExoticComponent<Pick<SidebarProps, "children" | "className" | "property" | "fixed" | "compactedBreakpoints" | "hiddenBreakpoints" | "responsive" | "state" | "containerFixed" | "getState"> & React.RefAttributes<SidebarRefObject>>;
declare const SidebarBody: React.FC<{
    children: React.ReactNode;
}>;
export { Sidebar, SidebarBody };
//# sourceMappingURL=index.d.ts.map