var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

/*
 * @license
 * Copyright Ahmed Elywa. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import styled, { css } from 'styled-components';
import { getHeadings } from '../utils';
var AccordionStyle = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  ", "\n"])), function (_ref) {
  var theme = _ref.theme;
  return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    display: block;\n    box-shadow: ", ";\n    border-radius: ", ";\n  "])), theme.accordionShadow, theme.accordionBorderRadius);
});
var ItemStyle = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  ", "\n"])), function (_ref2) {
  var theme = _ref2.theme;
  return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n    background-color: ", ";\n    color: ", ";\n    font-family: ", ";\n    font-size: ", ";\n    font-weight: ", ";\n    line-height: ", ";\n\n    display: flex;\n    flex-direction: column;\n\n    & > header {\n      position: relative;\n      padding: ", ";\n      border-bottom-width: ", ";\n      border-bottom-style: ", ";\n      border-bottom-color: ", ";\n      color: ", ";\n\n      font-family: ", ";\n      font-size: ", ";\n      font-weight: ", ";\n      line-height: ", ";\n\n      ", ";\n\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n\n      &:focus {\n        outline: 0;\n      }\n\n      .expansion-indicator {\n        position: absolute;\n        ", ": 1rem;\n      }\n    }\n\n    &.disabled > header {\n      color: ", ";\n      cursor: default;\n    }\n\n    &:first-child {\n      border-top-left-radius: ", ";\n      border-top-right-radius: ", ";\n    }\n    &:last-child {\n      border-bottom-left-radius: ", ";\n      border-bottom-right-radius: ", ";\n\n      &.collapsed > header {\n        border-bottom: none;\n      }\n    }\n    &:not(.collapsed) + & > header {\n      border-top-width: ", ";\n      border-top-style: ", ";\n      border-top-color: ", ";\n    }\n    .item-body {\n      flex: 1;\n      -ms-flex: 1 1 auto;\n      overflow: auto;\n      padding: ", ";\n      position: relative;\n    }\n    .collapsed {\n      overflow: hidden;\n      max-height: 0;\n      transition: all 0.5s cubic-bezier(0, 1, 0.3, 1) -100ms;\n    }\n    .expanded {\n      max-height: 1500px;\n      transition: all 0.5s cubic-bezier(1, 0.15, 1, 1);\n    }\n  "])), theme.accordionItemBackgroundColor, theme.accordionItemTextColor, theme.accordionItemTextFontFamily, theme.accordionItemTextFontSize, theme.accordionItemTextFontWeight, theme.accordionItemTextLineHeight, theme.accordionPadding, theme.accordionHeaderBorderWidth, theme.accordionHeaderBorderStyle, theme.accordionHeaderBorderColor, theme.accordionHeaderTextColor, theme.accordionHeaderTextFontFamily, theme.accordionHeaderTextFontSize, theme.accordionHeaderTextFontWeight, theme.accordionHeaderTextLineHeight, getHeadings, theme.dir === 'rtl' ? 'left' : 'right', theme.accordionHeaderDisabledTextColor, theme.accordionBorderRadius, theme.accordionBorderRadius, theme.accordionBorderRadius, theme.accordionBorderRadius, theme.accordionHeaderBorderWidth, theme.accordionHeaderBorderStyle, theme.accordionHeaderBorderColor, theme.accordionPadding);
});
export { ItemStyle, AccordionStyle };